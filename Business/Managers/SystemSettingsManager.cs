//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
// </auto-generated>
//------------------------------------------------------------------------------
using System;
using System.Collections;
using System.Collections.Generic;
using System.Linq;
using System.Linq.Expressions;
using System.Data.SqlClient;


using DataAccess;
using DataAccess.Base;
using Business.Base;
using Business.Interfaces;
using Objects;


 
namespace Business.Managers
{
public class SystemSettingsManager : BusinessComponentBase, ISystemSettingsManager
{


    public SystemSettingsManager(IDataAccessFactory dataAccessFactory)
        : base(dataAccessFactory)
    {

    }

public void Add(SystemSetting SystemSetting)
    {

DataAccessFactory.GetSystemSettingsRepository.Add(SystemSetting);
            DataAccessFactory.Commit();

}

public void Update(SystemSetting SystemSetting)
    {

DataAccessFactory.GetSystemSettingsRepository.Update(SystemSetting);
        DataAccessFactory.Commit();

}

public void Delete(SystemSetting SystemSetting)
    {

DataAccessFactory.GetSystemSettingsRepository.Delete(SystemSetting);
            DataAccessFactory.Commit();

}

public SystemSetting GetById(short id)
    {
        SystemSetting SystemSetting = null;

        //  SystemSetting =  DataAccessFactory.GetSystemSettingsRepository.First(_SystemSetting => _SystemSetting.SystemSettingID == id);

        return SystemSetting;
    }

    public IList<SystemSetting> GetAll()
    {
        IEnumerable<SystemSetting> SystemSettings = null;

        SystemSettings = DataAccessFactory.GetSystemSettingsRepository.GetAll();

        IList<SystemSetting> result = SystemSettings.ToList<SystemSetting>();

        return result;
    }
		
    public IEnumerable<SystemSetting> Find(Expression<Func<SystemSetting, bool>> @where, params Expression<Func<SystemSetting, object>>[] includes)
    {
        return  DataAccessFactory.GetSystemSettingsRepository.Find(@where, includes);
    }
		



        		

}

}
