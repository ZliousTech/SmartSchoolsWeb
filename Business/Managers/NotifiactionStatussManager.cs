//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
// </auto-generated>
//------------------------------------------------------------------------------
using System;
using System.Collections;
using System.Collections.Generic;
using System.Linq;
using System.Linq.Expressions;
using System.Data.SqlClient;


using DataAccess;
using DataAccess.Base;
using Business.Base;
using Business.Interfaces;
using Objects;


 
namespace Business.Managers
{
public class NotifiactionStatussManager : BusinessComponentBase, INotifiactionStatussManager
{


    public NotifiactionStatussManager(IDataAccessFactory dataAccessFactory)
        : base(dataAccessFactory)
    {

    }

public void Add(NotifiactionStatus NotifiactionStatus)
    {

DataAccessFactory.GetNotifiactionStatussRepository.Add(NotifiactionStatus);
            DataAccessFactory.Commit();

}

public void Update(NotifiactionStatus NotifiactionStatus)
    {

DataAccessFactory.GetNotifiactionStatussRepository.Update(NotifiactionStatus);
        DataAccessFactory.Commit();

}

public void Delete(NotifiactionStatus NotifiactionStatus)
    {

DataAccessFactory.GetNotifiactionStatussRepository.Delete(NotifiactionStatus);
            DataAccessFactory.Commit();

}

public NotifiactionStatus GetById(short id)
    {
        NotifiactionStatus NotifiactionStatus = null;

        //  NotifiactionStatus =  DataAccessFactory.GetNotifiactionStatussRepository.First(_NotifiactionStatus => _NotifiactionStatus.NotifiactionStatusID == id);

        return NotifiactionStatus;
    }

    public IList<NotifiactionStatus> GetAll()
    {
        IEnumerable<NotifiactionStatus> NotifiactionStatuss = null;

        NotifiactionStatuss = DataAccessFactory.GetNotifiactionStatussRepository.GetAll();

        IList<NotifiactionStatus> result = NotifiactionStatuss.ToList<NotifiactionStatus>();

        return result;
    }
		
    public IEnumerable<NotifiactionStatus> Find(Expression<Func<NotifiactionStatus, bool>> @where, params Expression<Func<NotifiactionStatus, object>>[] includes)
    {
        return  DataAccessFactory.GetNotifiactionStatussRepository.Find(@where, includes);
    }
		



        		

}

}
