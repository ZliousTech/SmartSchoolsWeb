//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
// </auto-generated>
//------------------------------------------------------------------------------
using System;
using System.Collections;
using System.Collections.Generic;
using System.Linq;
using System.Linq.Expressions;
using System.Data.SqlClient;


using DataAccess;
using DataAccess.Base;
using Business.Base;
using Business.Interfaces;
using Objects;


 
namespace Business.Managers
{
public class StaffJobDetailsManager : BusinessComponentBase, IStaffJobDetailsManager
{


    public StaffJobDetailsManager(IDataAccessFactory dataAccessFactory)
        : base(dataAccessFactory)
    {

    }

public void Add(StaffJobDetail StaffJobDetail)
    {

DataAccessFactory.GetStaffJobDetailsRepository.Add(StaffJobDetail);
            DataAccessFactory.Commit();

}

public void Update(StaffJobDetail StaffJobDetail)
    {

DataAccessFactory.GetStaffJobDetailsRepository.Update(StaffJobDetail);
        DataAccessFactory.Commit();

}

public void Delete(StaffJobDetail StaffJobDetail)
    {

DataAccessFactory.GetStaffJobDetailsRepository.Delete(StaffJobDetail);
            DataAccessFactory.Commit();

}

public StaffJobDetail GetById(short id)
    {
        StaffJobDetail StaffJobDetail = null;

        //  StaffJobDetail =  DataAccessFactory.GetStaffJobDetailsRepository.First(_StaffJobDetail => _StaffJobDetail.StaffJobDetailID == id);

        return StaffJobDetail;
    }

    public IList<StaffJobDetail> GetAll()
    {
        IEnumerable<StaffJobDetail> StaffJobDetails = null;

        StaffJobDetails = DataAccessFactory.GetStaffJobDetailsRepository.GetAll();

        IList<StaffJobDetail> result = StaffJobDetails.ToList<StaffJobDetail>();

        return result;
    }
		
    public IEnumerable<StaffJobDetail> Find(Expression<Func<StaffJobDetail, bool>> @where, params Expression<Func<StaffJobDetail, object>>[] includes)
    {
        return  DataAccessFactory.GetStaffJobDetailsRepository.Find(@where, includes);
    }
		



        		

}

}
