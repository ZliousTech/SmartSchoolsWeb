//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
// </auto-generated>
//------------------------------------------------------------------------------
using System;
using System.Collections;
using System.Collections.Generic;
using System.Linq;
using System.Linq.Expressions;
using System.Data.SqlClient;


using DataAccess;
using DataAccess.Base;
using Business.Base;
using Business.Interfaces;
using Objects;


 
namespace Business.Managers
{
public class DocumentsManager : BusinessComponentBase, IDocumentsManager
{


    public DocumentsManager(IDataAccessFactory dataAccessFactory)
        : base(dataAccessFactory)
    {

    }

public void Add(Document Document)
    {

DataAccessFactory.GetDocumentsRepository.Add(Document);
            DataAccessFactory.Commit();

}

public void Update(Document Document)
    {

DataAccessFactory.GetDocumentsRepository.Update(Document);
        DataAccessFactory.Commit();

}

public void Delete(Document Document)
    {

DataAccessFactory.GetDocumentsRepository.Delete(Document);
            DataAccessFactory.Commit();

}

public Document GetById(short id)
    {
        Document Document = null;

        //  Document =  DataAccessFactory.GetDocumentsRepository.First(_Document => _Document.DocumentID == id);

        return Document;
    }

    public IList<Document> GetAll()
    {
        IEnumerable<Document> Documents = null;

        Documents = DataAccessFactory.GetDocumentsRepository.GetAll();

        IList<Document> result = Documents.ToList<Document>();

        return result;
    }
		
    public IEnumerable<Document> Find(Expression<Func<Document, bool>> @where, params Expression<Func<Document, object>>[] includes)
    {
        return  DataAccessFactory.GetDocumentsRepository.Find(@where, includes);
    }
		



        		

}

}
