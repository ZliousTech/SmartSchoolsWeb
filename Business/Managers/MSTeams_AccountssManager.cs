//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
// </auto-generated>
//------------------------------------------------------------------------------
using System;
using System.Collections;
using System.Collections.Generic;
using System.Linq;
using System.Linq.Expressions;
using System.Data.SqlClient;


using DataAccess;
using DataAccess.Base;
using Business.Base;
using Business.Interfaces;
using Objects;


 
namespace Business.Managers
{
public class MSTeams_AccountssManager : BusinessComponentBase, IMSTeams_AccountssManager
{


    public MSTeams_AccountssManager(IDataAccessFactory dataAccessFactory)
        : base(dataAccessFactory)
    {

    }

public void Add(MSTeams_Accounts MSTeams_Accounts)
    {

DataAccessFactory.GetMSTeams_AccountssRepository.Add(MSTeams_Accounts);
            DataAccessFactory.Commit();

}

public void Update(MSTeams_Accounts MSTeams_Accounts)
    {

DataAccessFactory.GetMSTeams_AccountssRepository.Update(MSTeams_Accounts);
        DataAccessFactory.Commit();

}

public void Delete(MSTeams_Accounts MSTeams_Accounts)
    {

DataAccessFactory.GetMSTeams_AccountssRepository.Delete(MSTeams_Accounts);
            DataAccessFactory.Commit();

}

public MSTeams_Accounts GetById(short id)
    {
        MSTeams_Accounts MSTeams_Accounts = null;

        //  MSTeams_Accounts =  DataAccessFactory.GetMSTeams_AccountssRepository.First(_MSTeams_Accounts => _MSTeams_Accounts.MSTeams_AccountsID == id);

        return MSTeams_Accounts;
    }

    public IList<MSTeams_Accounts> GetAll()
    {
        IEnumerable<MSTeams_Accounts> MSTeams_Accountss = null;

        MSTeams_Accountss = DataAccessFactory.GetMSTeams_AccountssRepository.GetAll();

        IList<MSTeams_Accounts> result = MSTeams_Accountss.ToList<MSTeams_Accounts>();

        return result;
    }
		
    public IEnumerable<MSTeams_Accounts> Find(Expression<Func<MSTeams_Accounts, bool>> @where, params Expression<Func<MSTeams_Accounts, object>>[] includes)
    {
        return  DataAccessFactory.GetMSTeams_AccountssRepository.Find(@where, includes);
    }
		



        		

}

}
