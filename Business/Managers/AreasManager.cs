//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
// </auto-generated>
//------------------------------------------------------------------------------
using System;
using System.Collections;
using System.Collections.Generic;
using System.Linq;
using System.Linq.Expressions;
using System.Data.SqlClient;


using DataAccess;
using DataAccess.Base;
using Business.Base;
using Business.Interfaces;
using Objects;


 
namespace Business.Managers
{
public class AreasManager : BusinessComponentBase, IAreasManager
{


    public AreasManager(IDataAccessFactory dataAccessFactory)
        : base(dataAccessFactory)
    {

    }

public void Add(Area Area)
    {

DataAccessFactory.GetAreasRepository.Add(Area);
            DataAccessFactory.Commit();

}

public void Update(Area Area)
    {

DataAccessFactory.GetAreasRepository.Update(Area);
        DataAccessFactory.Commit();

}

public void Delete(Area Area)
    {

DataAccessFactory.GetAreasRepository.Delete(Area);
            DataAccessFactory.Commit();

}

public Area GetById(short id)
    {
        Area Area = null;

        //  Area =  DataAccessFactory.GetAreasRepository.First(_Area => _Area.AreaID == id);

        return Area;
    }

    public IList<Area> GetAll()
    {
        IEnumerable<Area> Areas = null;

        Areas = DataAccessFactory.GetAreasRepository.GetAll();

        IList<Area> result = Areas.ToList<Area>();

        return result;
    }
		
    public IEnumerable<Area> Find(Expression<Func<Area, bool>> @where, params Expression<Func<Area, object>>[] includes)
    {
        return  DataAccessFactory.GetAreasRepository.Find(@where, includes);
    }
		



        		

}

}
