//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
// </auto-generated>
//------------------------------------------------------------------------------
using System;
using System.Collections;
using System.Collections.Generic;
using System.Linq;
using System.Linq.Expressions;
using System.Data.SqlClient;


using DataAccess;
using DataAccess.Base;
using Business.Base;
using Business.Interfaces;
using Objects;


 
namespace Business.Managers
{
public class StaffContactDetailsManager : BusinessComponentBase, IStaffContactDetailsManager
{


    public StaffContactDetailsManager(IDataAccessFactory dataAccessFactory)
        : base(dataAccessFactory)
    {

    }

public void Add(StaffContactDetail StaffContactDetail)
    {

DataAccessFactory.GetStaffContactDetailsRepository.Add(StaffContactDetail);
            DataAccessFactory.Commit();

}

public void Update(StaffContactDetail StaffContactDetail)
    {

DataAccessFactory.GetStaffContactDetailsRepository.Update(StaffContactDetail);
        DataAccessFactory.Commit();

}

public void Delete(StaffContactDetail StaffContactDetail)
    {

DataAccessFactory.GetStaffContactDetailsRepository.Delete(StaffContactDetail);
            DataAccessFactory.Commit();

}

public StaffContactDetail GetById(short id)
    {
        StaffContactDetail StaffContactDetail = null;

        //  StaffContactDetail =  DataAccessFactory.GetStaffContactDetailsRepository.First(_StaffContactDetail => _StaffContactDetail.StaffContactDetailID == id);

        return StaffContactDetail;
    }

    public IList<StaffContactDetail> GetAll()
    {
        IEnumerable<StaffContactDetail> StaffContactDetails = null;

        StaffContactDetails = DataAccessFactory.GetStaffContactDetailsRepository.GetAll();

        IList<StaffContactDetail> result = StaffContactDetails.ToList<StaffContactDetail>();

        return result;
    }
		
    public IEnumerable<StaffContactDetail> Find(Expression<Func<StaffContactDetail, bool>> @where, params Expression<Func<StaffContactDetail, object>>[] includes)
    {
        return  DataAccessFactory.GetStaffContactDetailsRepository.Find(@where, includes);
    }
		



        		

}

}
