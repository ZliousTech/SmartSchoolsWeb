//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
// </auto-generated>
//------------------------------------------------------------------------------
using System;
using System.Collections;
using System.Collections.Generic;
using System.Linq;
using System.Linq.Expressions;
using System.Data.SqlClient;


using DataAccess;
using DataAccess.Base;
using Business.Base;
using Business.Interfaces;
using Objects;


 
namespace Business.Managers
{
public class AppraisalsManager : BusinessComponentBase, IAppraisalsManager
{


    public AppraisalsManager(IDataAccessFactory dataAccessFactory)
        : base(dataAccessFactory)
    {

    }

public void Add(Appraisal Appraisal)
    {

DataAccessFactory.GetAppraisalsRepository.Add(Appraisal);
            DataAccessFactory.Commit();

}

public void Update(Appraisal Appraisal)
    {

DataAccessFactory.GetAppraisalsRepository.Update(Appraisal);
        DataAccessFactory.Commit();

}

public void Delete(Appraisal Appraisal)
    {

DataAccessFactory.GetAppraisalsRepository.Delete(Appraisal);
            DataAccessFactory.Commit();

}

public Appraisal GetById(short id)
    {
        Appraisal Appraisal = null;

        //  Appraisal =  DataAccessFactory.GetAppraisalsRepository.First(_Appraisal => _Appraisal.AppraisalID == id);

        return Appraisal;
    }

    public IList<Appraisal> GetAll()
    {
        IEnumerable<Appraisal> Appraisals = null;

        Appraisals = DataAccessFactory.GetAppraisalsRepository.GetAll();

        IList<Appraisal> result = Appraisals.ToList<Appraisal>();

        return result;
    }
		
    public IEnumerable<Appraisal> Find(Expression<Func<Appraisal, bool>> @where, params Expression<Func<Appraisal, object>>[] includes)
    {
        return  DataAccessFactory.GetAppraisalsRepository.Find(@where, includes);
    }
		



        		

}

}
