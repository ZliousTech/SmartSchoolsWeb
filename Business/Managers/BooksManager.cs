//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
// </auto-generated>
//------------------------------------------------------------------------------
using System;
using System.Collections;
using System.Collections.Generic;
using System.Linq;
using System.Linq.Expressions;
using System.Data.SqlClient;


using DataAccess;
using DataAccess.Base;
using Business.Base;
using Business.Interfaces;
using Objects;


 
namespace Business.Managers
{
public class BooksManager : BusinessComponentBase, IBooksManager
{


    public BooksManager(IDataAccessFactory dataAccessFactory)
        : base(dataAccessFactory)
    {

    }

public void Add(Book Book)
    {

DataAccessFactory.GetBooksRepository.Add(Book);
            DataAccessFactory.Commit();

}

public void Update(Book Book)
    {

DataAccessFactory.GetBooksRepository.Update(Book);
        DataAccessFactory.Commit();

}

public void Delete(Book Book)
    {

DataAccessFactory.GetBooksRepository.Delete(Book);
            DataAccessFactory.Commit();

}

public Book GetById(short id)
    {
        Book Book = null;

        //  Book =  DataAccessFactory.GetBooksRepository.First(_Book => _Book.BookID == id);

        return Book;
    }

    public IList<Book> GetAll()
    {
        IEnumerable<Book> Books = null;

        Books = DataAccessFactory.GetBooksRepository.GetAll();

        IList<Book> result = Books.ToList<Book>();

        return result;
    }
		
    public IEnumerable<Book> Find(Expression<Func<Book, bool>> @where, params Expression<Func<Book, object>>[] includes)
    {
        return  DataAccessFactory.GetBooksRepository.Find(@where, includes);
    }
		



        		

}

}
