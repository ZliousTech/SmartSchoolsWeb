//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
// </auto-generated>
//------------------------------------------------------------------------------
using System;
using System.Collections;
using System.Collections.Generic;
using System.Linq;
using System.Linq.Expressions;
using System.Data.SqlClient;


using DataAccess;
using DataAccess.Base;
using Business.Base;
using Business.Interfaces;
using Objects;


 
namespace Business.Managers
{
public class KPIsManager : BusinessComponentBase, IKPIsManager
{


    public KPIsManager(IDataAccessFactory dataAccessFactory)
        : base(dataAccessFactory)
    {

    }

public void Add(KPI KPI)
    {

DataAccessFactory.GetKPIsRepository.Add(KPI);
            DataAccessFactory.Commit();

}

public void Update(KPI KPI)
    {

DataAccessFactory.GetKPIsRepository.Update(KPI);
        DataAccessFactory.Commit();

}

public void Delete(KPI KPI)
    {

DataAccessFactory.GetKPIsRepository.Delete(KPI);
            DataAccessFactory.Commit();

}

public KPI GetById(short id)
    {
        KPI KPI = null;

        //  KPI =  DataAccessFactory.GetKPIsRepository.First(_KPI => _KPI.KPIID == id);

        return KPI;
    }

    public IList<KPI> GetAll()
    {
        IEnumerable<KPI> KPIs = null;

        KPIs = DataAccessFactory.GetKPIsRepository.GetAll();

        IList<KPI> result = KPIs.ToList<KPI>();

        return result;
    }
		
    public IEnumerable<KPI> Find(Expression<Func<KPI, bool>> @where, params Expression<Func<KPI, object>>[] includes)
    {
        return  DataAccessFactory.GetKPIsRepository.Find(@where, includes);
    }
		



        		

}

}
