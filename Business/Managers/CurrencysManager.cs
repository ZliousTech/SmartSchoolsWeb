//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
// </auto-generated>
//------------------------------------------------------------------------------
using System;
using System.Collections;
using System.Collections.Generic;
using System.Linq;
using System.Linq.Expressions;
using System.Data.SqlClient;


using DataAccess;
using DataAccess.Base;
using Business.Base;
using Business.Interfaces;
using Objects;


 
namespace Business.Managers
{
public class CurrencysManager : BusinessComponentBase, ICurrencysManager
{


    public CurrencysManager(IDataAccessFactory dataAccessFactory)
        : base(dataAccessFactory)
    {

    }

public void Add(Currency Currency)
    {

DataAccessFactory.GetCurrencysRepository.Add(Currency);
            DataAccessFactory.Commit();

}

public void Update(Currency Currency)
    {

DataAccessFactory.GetCurrencysRepository.Update(Currency);
        DataAccessFactory.Commit();

}

public void Delete(Currency Currency)
    {

DataAccessFactory.GetCurrencysRepository.Delete(Currency);
            DataAccessFactory.Commit();

}

public Currency GetById(short id)
    {
        Currency Currency = null;

        //  Currency =  DataAccessFactory.GetCurrencysRepository.First(_Currency => _Currency.CurrencyID == id);

        return Currency;
    }

    public IList<Currency> GetAll()
    {
        IEnumerable<Currency> Currencys = null;

        Currencys = DataAccessFactory.GetCurrencysRepository.GetAll();

        IList<Currency> result = Currencys.ToList<Currency>();

        return result;
    }
		
    public IEnumerable<Currency> Find(Expression<Func<Currency, bool>> @where, params Expression<Func<Currency, object>>[] includes)
    {
        return  DataAccessFactory.GetCurrencysRepository.Find(@where, includes);
    }
		



        		

}

}
