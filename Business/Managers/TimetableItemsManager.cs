//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
// </auto-generated>
//------------------------------------------------------------------------------
using System;
using System.Collections;
using System.Collections.Generic;
using System.Linq;
using System.Linq.Expressions;
using System.Data.SqlClient;


using DataAccess;
using DataAccess.Base;
using Business.Base;
using Business.Interfaces;
using Objects;


 
namespace Business.Managers
{
public class TimetableItemsManager : BusinessComponentBase, ITimetableItemsManager
{


    public TimetableItemsManager(IDataAccessFactory dataAccessFactory)
        : base(dataAccessFactory)
    {

    }

public void Add(TimetableItem TimetableItem)
    {

DataAccessFactory.GetTimetableItemsRepository.Add(TimetableItem);
            DataAccessFactory.Commit();

}

public void Update(TimetableItem TimetableItem)
    {

DataAccessFactory.GetTimetableItemsRepository.Update(TimetableItem);
        DataAccessFactory.Commit();

}

public void Delete(TimetableItem TimetableItem)
    {

DataAccessFactory.GetTimetableItemsRepository.Delete(TimetableItem);
            DataAccessFactory.Commit();

}

public TimetableItem GetById(short id)
    {
        TimetableItem TimetableItem = null;

        //  TimetableItem =  DataAccessFactory.GetTimetableItemsRepository.First(_TimetableItem => _TimetableItem.TimetableItemID == id);

        return TimetableItem;
    }

    public IList<TimetableItem> GetAll()
    {
        IEnumerable<TimetableItem> TimetableItems = null;

        TimetableItems = DataAccessFactory.GetTimetableItemsRepository.GetAll();

        IList<TimetableItem> result = TimetableItems.ToList<TimetableItem>();

        return result;
    }
		
    public IEnumerable<TimetableItem> Find(Expression<Func<TimetableItem, bool>> @where, params Expression<Func<TimetableItem, object>>[] includes)
    {
        return  DataAccessFactory.GetTimetableItemsRepository.Find(@where, includes);
    }
		



        		

}

}
