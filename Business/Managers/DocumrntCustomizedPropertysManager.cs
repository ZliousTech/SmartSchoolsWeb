//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
// </auto-generated>
//------------------------------------------------------------------------------
using System;
using System.Collections;
using System.Collections.Generic;
using System.Linq;
using System.Linq.Expressions;
using System.Data.SqlClient;


using DataAccess;
using DataAccess.Base;
using Business.Base;
using Business.Interfaces;
using Objects;


 
namespace Business.Managers
{
public class DocumrntCustomizedPropertysManager : BusinessComponentBase, IDocumrntCustomizedPropertysManager
{


    public DocumrntCustomizedPropertysManager(IDataAccessFactory dataAccessFactory)
        : base(dataAccessFactory)
    {

    }

public void Add(DocumrntCustomizedProperty DocumrntCustomizedProperty)
    {

DataAccessFactory.GetDocumrntCustomizedPropertysRepository.Add(DocumrntCustomizedProperty);
            DataAccessFactory.Commit();

}

public void Update(DocumrntCustomizedProperty DocumrntCustomizedProperty)
    {

DataAccessFactory.GetDocumrntCustomizedPropertysRepository.Update(DocumrntCustomizedProperty);
        DataAccessFactory.Commit();

}

public void Delete(DocumrntCustomizedProperty DocumrntCustomizedProperty)
    {

DataAccessFactory.GetDocumrntCustomizedPropertysRepository.Delete(DocumrntCustomizedProperty);
            DataAccessFactory.Commit();

}

public DocumrntCustomizedProperty GetById(short id)
    {
        DocumrntCustomizedProperty DocumrntCustomizedProperty = null;

        //  DocumrntCustomizedProperty =  DataAccessFactory.GetDocumrntCustomizedPropertysRepository.First(_DocumrntCustomizedProperty => _DocumrntCustomizedProperty.DocumrntCustomizedPropertyID == id);

        return DocumrntCustomizedProperty;
    }

    public IList<DocumrntCustomizedProperty> GetAll()
    {
        IEnumerable<DocumrntCustomizedProperty> DocumrntCustomizedPropertys = null;

        DocumrntCustomizedPropertys = DataAccessFactory.GetDocumrntCustomizedPropertysRepository.GetAll();

        IList<DocumrntCustomizedProperty> result = DocumrntCustomizedPropertys.ToList<DocumrntCustomizedProperty>();

        return result;
    }
		
    public IEnumerable<DocumrntCustomizedProperty> Find(Expression<Func<DocumrntCustomizedProperty, bool>> @where, params Expression<Func<DocumrntCustomizedProperty, object>>[] includes)
    {
        return  DataAccessFactory.GetDocumrntCustomizedPropertysRepository.Find(@where, includes);
    }
		



        		

}

}
