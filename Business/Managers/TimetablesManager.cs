//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
// </auto-generated>
//------------------------------------------------------------------------------
using System;
using System.Collections;
using System.Collections.Generic;
using System.Linq;
using System.Linq.Expressions;
using System.Data.SqlClient;


using DataAccess;
using DataAccess.Base;
using Business.Base;
using Business.Interfaces;
using Objects;


 
namespace Business.Managers
{
public class TimetablesManager : BusinessComponentBase, ITimetablesManager
{


    public TimetablesManager(IDataAccessFactory dataAccessFactory)
        : base(dataAccessFactory)
    {

    }

public void Add(Timetable Timetable)
    {

DataAccessFactory.GetTimetablesRepository.Add(Timetable);
            DataAccessFactory.Commit();

}

public void Update(Timetable Timetable)
    {

DataAccessFactory.GetTimetablesRepository.Update(Timetable);
        DataAccessFactory.Commit();

}

public void Delete(Timetable Timetable)
    {

DataAccessFactory.GetTimetablesRepository.Delete(Timetable);
            DataAccessFactory.Commit();

}

public Timetable GetById(short id)
    {
        Timetable Timetable = null;

        //  Timetable =  DataAccessFactory.GetTimetablesRepository.First(_Timetable => _Timetable.TimetableID == id);

        return Timetable;
    }

    public IList<Timetable> GetAll()
    {
        IEnumerable<Timetable> Timetables = null;

        Timetables = DataAccessFactory.GetTimetablesRepository.GetAll();

        IList<Timetable> result = Timetables.ToList<Timetable>();

        return result;
    }
		
    public IEnumerable<Timetable> Find(Expression<Func<Timetable, bool>> @where, params Expression<Func<Timetable, object>>[] includes)
    {
        return  DataAccessFactory.GetTimetablesRepository.Find(@where, includes);
    }
		



        		

}

}
