//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
// </auto-generated>
//------------------------------------------------------------------------------
using System;
using System.Collections;
using System.Collections.Generic;
using System.Linq;
using System.Linq.Expressions;
using System.Data.SqlClient;


using DataAccess;
using DataAccess.Base;
using Business.Base;
using Business.Interfaces;
using Objects;


 
namespace Business.Managers
{
public class GuardiansManager : BusinessComponentBase, IGuardiansManager
{


    public GuardiansManager(IDataAccessFactory dataAccessFactory)
        : base(dataAccessFactory)
    {

    }

public void Add(Guardian Guardian)
    {

DataAccessFactory.GetGuardiansRepository.Add(Guardian);
            DataAccessFactory.Commit();

}

public void Update(Guardian Guardian)
    {

DataAccessFactory.GetGuardiansRepository.Update(Guardian);
        DataAccessFactory.Commit();

}

public void Delete(Guardian Guardian)
    {

DataAccessFactory.GetGuardiansRepository.Delete(Guardian);
            DataAccessFactory.Commit();

}

public Guardian GetById(short id)
    {
        Guardian Guardian = null;

        //  Guardian =  DataAccessFactory.GetGuardiansRepository.First(_Guardian => _Guardian.GuardianID == id);

        return Guardian;
    }

    public IList<Guardian> GetAll()
    {
        IEnumerable<Guardian> Guardians = null;

        Guardians = DataAccessFactory.GetGuardiansRepository.GetAll();

        IList<Guardian> result = Guardians.ToList<Guardian>();

        return result;
    }
		
    public IEnumerable<Guardian> Find(Expression<Func<Guardian, bool>> @where, params Expression<Func<Guardian, object>>[] includes)
    {
        return  DataAccessFactory.GetGuardiansRepository.Find(@where, includes);
    }
		



        		

}

}
