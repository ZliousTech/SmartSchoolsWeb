//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
// </auto-generated>
//------------------------------------------------------------------------------
using System;
using System.Collections;
using System.Collections.Generic;
using System.Linq;
using System.Linq.Expressions;
using System.Data.SqlClient;


using DataAccess;
using DataAccess.Base;
using Business.Base;
using Business.Interfaces;
using Objects;


 
namespace Business.Managers
{
public class TemplateSettingsManager : BusinessComponentBase, ITemplateSettingsManager
{


    public TemplateSettingsManager(IDataAccessFactory dataAccessFactory)
        : base(dataAccessFactory)
    {

    }

public void Add(TemplateSetting TemplateSetting)
    {

DataAccessFactory.GetTemplateSettingsRepository.Add(TemplateSetting);
            DataAccessFactory.Commit();

}

public void Update(TemplateSetting TemplateSetting)
    {

DataAccessFactory.GetTemplateSettingsRepository.Update(TemplateSetting);
        DataAccessFactory.Commit();

}

public void Delete(TemplateSetting TemplateSetting)
    {

DataAccessFactory.GetTemplateSettingsRepository.Delete(TemplateSetting);
            DataAccessFactory.Commit();

}

public TemplateSetting GetById(short id)
    {
        TemplateSetting TemplateSetting = null;

        //  TemplateSetting =  DataAccessFactory.GetTemplateSettingsRepository.First(_TemplateSetting => _TemplateSetting.TemplateSettingID == id);

        return TemplateSetting;
    }

    public IList<TemplateSetting> GetAll()
    {
        IEnumerable<TemplateSetting> TemplateSettings = null;

        TemplateSettings = DataAccessFactory.GetTemplateSettingsRepository.GetAll();

        IList<TemplateSetting> result = TemplateSettings.ToList<TemplateSetting>();

        return result;
    }
		
    public IEnumerable<TemplateSetting> Find(Expression<Func<TemplateSetting, bool>> @where, params Expression<Func<TemplateSetting, object>>[] includes)
    {
        return  DataAccessFactory.GetTemplateSettingsRepository.Find(@where, includes);
    }
		



        		

}

}
