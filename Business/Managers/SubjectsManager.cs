//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
// </auto-generated>
//------------------------------------------------------------------------------
using System;
using System.Collections;
using System.Collections.Generic;
using System.Linq;
using System.Linq.Expressions;
using System.Data.SqlClient;


using DataAccess;
using DataAccess.Base;
using Business.Base;
using Business.Interfaces;
using Objects;


 
namespace Business.Managers
{
public class SubjectsManager : BusinessComponentBase, ISubjectsManager
{


    public SubjectsManager(IDataAccessFactory dataAccessFactory)
        : base(dataAccessFactory)
    {

    }

public void Add(Subject Subject)
    {

DataAccessFactory.GetSubjectsRepository.Add(Subject);
            DataAccessFactory.Commit();

}

public void Update(Subject Subject)
    {

DataAccessFactory.GetSubjectsRepository.Update(Subject);
        DataAccessFactory.Commit();

}

public void Delete(Subject Subject)
    {

DataAccessFactory.GetSubjectsRepository.Delete(Subject);
            DataAccessFactory.Commit();

}

public Subject GetById(short id)
    {
        Subject Subject = null;

        //  Subject =  DataAccessFactory.GetSubjectsRepository.First(_Subject => _Subject.SubjectID == id);

        return Subject;
    }

    public IList<Subject> GetAll()
    {
        IEnumerable<Subject> Subjects = null;

        Subjects = DataAccessFactory.GetSubjectsRepository.GetAll();

        IList<Subject> result = Subjects.ToList<Subject>();

        return result;
    }
		
    public IEnumerable<Subject> Find(Expression<Func<Subject, bool>> @where, params Expression<Func<Subject, object>>[] includes)
    {
        return  DataAccessFactory.GetSubjectsRepository.Find(@where, includes);
    }
		



        		

}

}
