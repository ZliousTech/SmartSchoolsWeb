//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
// </auto-generated>
//------------------------------------------------------------------------------
using System;
using System.Collections;
using System.Collections.Generic;
using System.Linq;
using System.Linq.Expressions;
using System.Data.SqlClient;


using DataAccess;
using DataAccess.Base;
using Business.Base;
using Business.Interfaces;
using Objects;
using Objects.DTO;

namespace Business.Managers
{
    public class StaffsManager : BusinessComponentBase, IStaffsManager
    {


        public StaffsManager(IDataAccessFactory dataAccessFactory)
            : base(dataAccessFactory)
        {

        }

        public void Add(Staff Staff)
        {

            DataAccessFactory.GetStaffsRepository.Add(Staff);
            DataAccessFactory.Commit();

        }

        public void Update(Staff Staff)
        {

            DataAccessFactory.GetStaffsRepository.Update(Staff);
            DataAccessFactory.Commit();

        }

        public void Delete(Staff Staff)
        {

            DataAccessFactory.GetStaffsRepository.Delete(Staff);
            DataAccessFactory.Commit();

        }

        public Staff GetById(short id)
        {
            Staff Staff = null;

            //  Staff =  DataAccessFactory.GetStaffsRepository.First(_Staff => _Staff.StaffID == id);

            return Staff;
        }

        public IList<Staff> GetAll()
        {
            IEnumerable<Staff> Staffs = null;

            Staffs = DataAccessFactory.GetStaffsRepository.GetAll();

            IList<Staff> result = Staffs.ToList<Staff>();

            return result;
        }

        public IEnumerable<Staff> Find(Expression<Func<Staff, bool>> @where, params Expression<Func<Staff, object>>[] includes)
        {
            return DataAccessFactory.GetStaffsRepository.Find(@where, includes);
        }


        public List<StaffDesignationDTO> GetEmployeeStatisticsByDesgination(int SchoolID)
        {
            return DataAccessFactory.GetStaffsRepository.GetEmployeeStatisticsByDesgination(SchoolID);

        }

        public List<EmployeeDTO> GetEmployees(int SchoolID, string lang)
        {
            return DataAccessFactory.GetStaffsRepository.GetEmployees(SchoolID, lang);

        }


        public List<TeacherDTO> GetTeachers(int SchoolID, string lang, string schoolyear)
        {
            return DataAccessFactory.GetStaffsRepository.GetTeachers(SchoolID, lang, schoolyear);

        }


        public List<EmployeeDTO> GetDrivers(int SchoolID, string lang)

        {
            return DataAccessFactory.GetStaffsRepository.GetDrivers(SchoolID, lang);

        }
        public List<EmployeeDTO> GetEscort(int SchoolID, string lang)

        {
            return DataAccessFactory.GetStaffsRepository.GetEscort(SchoolID, lang);

        }





    }

}
