//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
// </auto-generated>
//------------------------------------------------------------------------------
using System;
using System.Collections;
using System.Collections.Generic;
using System.Linq;
using System.Linq.Expressions;
using System.Data.SqlClient;


using DataAccess;
using DataAccess.Base;
using Business.Base;
using Business.Interfaces;
using Objects;


 
namespace Business.Managers
{
public class StudentDiseassManager : BusinessComponentBase, IStudentDiseassManager
{


    public StudentDiseassManager(IDataAccessFactory dataAccessFactory)
        : base(dataAccessFactory)
    {

    }

public void Add(StudentDiseas StudentDiseas)
    {

DataAccessFactory.GetStudentDiseassRepository.Add(StudentDiseas);
            DataAccessFactory.Commit();

}

public void Update(StudentDiseas StudentDiseas)
    {

DataAccessFactory.GetStudentDiseassRepository.Update(StudentDiseas);
        DataAccessFactory.Commit();

}

public void Delete(StudentDiseas StudentDiseas)
    {

DataAccessFactory.GetStudentDiseassRepository.Delete(StudentDiseas);
            DataAccessFactory.Commit();

}

public StudentDiseas GetById(short id)
    {
        StudentDiseas StudentDiseas = null;

        //  StudentDiseas =  DataAccessFactory.GetStudentDiseassRepository.First(_StudentDiseas => _StudentDiseas.StudentDiseasID == id);

        return StudentDiseas;
    }

    public IList<StudentDiseas> GetAll()
    {
        IEnumerable<StudentDiseas> StudentDiseass = null;

        StudentDiseass = DataAccessFactory.GetStudentDiseassRepository.GetAll();

        IList<StudentDiseas> result = StudentDiseass.ToList<StudentDiseas>();

        return result;
    }
		
    public IEnumerable<StudentDiseas> Find(Expression<Func<StudentDiseas, bool>> @where, params Expression<Func<StudentDiseas, object>>[] includes)
    {
        return  DataAccessFactory.GetStudentDiseassRepository.Find(@where, includes);
    }
		



        		

}

}

