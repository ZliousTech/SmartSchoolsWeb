//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
// </auto-generated>
//------------------------------------------------------------------------------
using System;
using System.Collections;
using System.Collections.Generic;
using System.Linq;
using System.Linq.Expressions;
using System.Data.SqlClient;


using DataAccess;
using DataAccess.Base;
using Business.Base;
using Business.Interfaces;
using Objects;


 
namespace Business.Managers
{
public class CountrysManager : BusinessComponentBase, ICountrysManager
{


    public CountrysManager(IDataAccessFactory dataAccessFactory)
        : base(dataAccessFactory)
    {

    }

public void Add(Country Country)
    {

DataAccessFactory.GetCountrysRepository.Add(Country);
            DataAccessFactory.Commit();

}

public void Update(Country Country)
    {

DataAccessFactory.GetCountrysRepository.Update(Country);
        DataAccessFactory.Commit();

}

public void Delete(Country Country)
    {

DataAccessFactory.GetCountrysRepository.Delete(Country);
            DataAccessFactory.Commit();

}

public Country GetById(short id)
    {
        Country Country = null;

        //  Country =  DataAccessFactory.GetCountrysRepository.First(_Country => _Country.CountryID == id);

        return Country;
    }

    public IList<Country> GetAll()
    {
        IEnumerable<Country> Countrys = null;

        Countrys = DataAccessFactory.GetCountrysRepository.GetAll();

        IList<Country> result = Countrys.ToList<Country>();

        return result;
    }
		
    public IEnumerable<Country> Find(Expression<Func<Country, bool>> @where, params Expression<Func<Country, object>>[] includes)
    {
        return  DataAccessFactory.GetCountrysRepository.Find(@where, includes);
    }
		



        		

}

}
