//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
// </auto-generated>
//------------------------------------------------------------------------------
using System;
using System.Collections;
using System.Collections.Generic;
using System.Linq;
using System.Linq.Expressions;
using System.Data.SqlClient;


using DataAccess;
using DataAccess.Base;
using Business.Base;
using Business.Interfaces;
using Objects;


 
namespace Business.Managers
{
public class WebUsersManager : BusinessComponentBase, IWebUsersManager
{


    public WebUsersManager(IDataAccessFactory dataAccessFactory)
        : base(dataAccessFactory)
    {

    }

public void Add(WebUser WebUser)
    {

DataAccessFactory.GetWebUsersRepository.Add(WebUser);
            DataAccessFactory.Commit();

}

public void Update(WebUser WebUser)
    {

DataAccessFactory.GetWebUsersRepository.Update(WebUser);
        DataAccessFactory.Commit();

}

public void Delete(WebUser WebUser)
    {

DataAccessFactory.GetWebUsersRepository.Delete(WebUser);
            DataAccessFactory.Commit();

}

public WebUser GetById(short id)
    {
        WebUser WebUser = null;

        //  WebUser =  DataAccessFactory.GetWebUsersRepository.First(_WebUser => _WebUser.WebUserID == id);

        return WebUser;
    }

    public IList<WebUser> GetAll()
    {
        IEnumerable<WebUser> WebUsers = null;

        WebUsers = DataAccessFactory.GetWebUsersRepository.GetAll();

        IList<WebUser> result = WebUsers.ToList<WebUser>();

        return result;
    }
		
    public IEnumerable<WebUser> Find(Expression<Func<WebUser, bool>> @where, params Expression<Func<WebUser, object>>[] includes)
    {
        return  DataAccessFactory.GetWebUsersRepository.Find(@where, includes);
    }
		



        		

}

}
