//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
// </auto-generated>
//------------------------------------------------------------------------------
using System;
using System.Collections;
using System.Collections.Generic;
using System.Linq;
using System.Linq.Expressions;
using System.Data.SqlClient;


using DataAccess;
using DataAccess.Base;
using Business.Base;
using Business.Interfaces;
using Objects;


 
namespace Business.Managers
{
public class StudentHealthsManager : BusinessComponentBase, IStudentHealthsManager
{


    public StudentHealthsManager(IDataAccessFactory dataAccessFactory)
        : base(dataAccessFactory)
    {

    }

public void Add(StudentHealth StudentHealth)
    {

DataAccessFactory.GetStudentHealthsRepository.Add(StudentHealth);
            DataAccessFactory.Commit();

}

public void Update(StudentHealth StudentHealth)
    {

DataAccessFactory.GetStudentHealthsRepository.Update(StudentHealth);
        DataAccessFactory.Commit();

}

public void Delete(StudentHealth StudentHealth)
    {

DataAccessFactory.GetStudentHealthsRepository.Delete(StudentHealth);
            DataAccessFactory.Commit();

}

public StudentHealth GetById(short id)
    {
        StudentHealth StudentHealth = null;

        //  StudentHealth =  DataAccessFactory.GetStudentHealthsRepository.First(_StudentHealth => _StudentHealth.StudentHealthID == id);

        return StudentHealth;
    }

    public IList<StudentHealth> GetAll()
    {
        IEnumerable<StudentHealth> StudentHealths = null;

        StudentHealths = DataAccessFactory.GetStudentHealthsRepository.GetAll();

        IList<StudentHealth> result = StudentHealths.ToList<StudentHealth>();

        return result;
    }
		
    public IEnumerable<StudentHealth> Find(Expression<Func<StudentHealth, bool>> @where, params Expression<Func<StudentHealth, object>>[] includes)
    {
        return  DataAccessFactory.GetStudentHealthsRepository.Find(@where, includes);
    }
		



        		

}

}

