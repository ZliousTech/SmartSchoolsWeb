//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
// </auto-generated>
//------------------------------------------------------------------------------
using System;
using System.Collections;
using System.Collections.Generic;
using System.Linq;
using System.Linq.Expressions;
using System.Data.SqlClient;


using DataAccess;
using DataAccess.Base;
using Business.Base;
using Business.Interfaces;
using Objects;


 
namespace Business.Managers
{
public class FeeTypesManager : BusinessComponentBase, IFeeTypesManager
{


    public FeeTypesManager(IDataAccessFactory dataAccessFactory)
        : base(dataAccessFactory)
    {

    }

public void Add(FeeType FeeType)
    {

DataAccessFactory.GetFeeTypesRepository.Add(FeeType);
            DataAccessFactory.Commit();

}

public void Update(FeeType FeeType)
    {

DataAccessFactory.GetFeeTypesRepository.Update(FeeType);
        DataAccessFactory.Commit();

}

public void Delete(FeeType FeeType)
    {

DataAccessFactory.GetFeeTypesRepository.Delete(FeeType);
            DataAccessFactory.Commit();

}

public FeeType GetById(short id)
    {
        FeeType FeeType = null;

        //  FeeType =  DataAccessFactory.GetFeeTypesRepository.First(_FeeType => _FeeType.FeeTypeID == id);

        return FeeType;
    }

    public IList<FeeType> GetAll()
    {
        IEnumerable<FeeType> FeeTypes = null;

        FeeTypes = DataAccessFactory.GetFeeTypesRepository.GetAll();

        IList<FeeType> result = FeeTypes.ToList<FeeType>();

        return result;
    }
		
    public IEnumerable<FeeType> Find(Expression<Func<FeeType, bool>> @where, params Expression<Func<FeeType, object>>[] includes)
    {
        return  DataAccessFactory.GetFeeTypesRepository.Find(@where, includes);
    }
		



        		

}

}
