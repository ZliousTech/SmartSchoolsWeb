//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
// </auto-generated>
//------------------------------------------------------------------------------
using System;
using System.Collections;
using System.Collections.Generic;
using System.Linq;
using System.Linq.Expressions;
using System.Data.SqlClient;


using DataAccess;
using DataAccess.Base;
using Business.Base;
using Business.Interfaces;
using Objects;


 
namespace Business.Managers
{
public class TeachersManager : BusinessComponentBase, ITeachersManager
{


    public TeachersManager(IDataAccessFactory dataAccessFactory)
        : base(dataAccessFactory)
    {

    }

public void Add(Teacher Teacher)
    {

DataAccessFactory.GetTeachersRepository.Add(Teacher);
            DataAccessFactory.Commit();

}

public void Update(Teacher Teacher)
    {

DataAccessFactory.GetTeachersRepository.Update(Teacher);
        DataAccessFactory.Commit();

}

public void Delete(Teacher Teacher)
    {

DataAccessFactory.GetTeachersRepository.Delete(Teacher);
            DataAccessFactory.Commit();

}

public Teacher GetById(short id)
    {
        Teacher Teacher = null;

        //  Teacher =  DataAccessFactory.GetTeachersRepository.First(_Teacher => _Teacher.TeacherID == id);

        return Teacher;
    }

    public IList<Teacher> GetAll()
    {
        IEnumerable<Teacher> Teachers = null;

        Teachers = DataAccessFactory.GetTeachersRepository.GetAll();

        IList<Teacher> result = Teachers.ToList<Teacher>();

        return result;
    }
		
    public IEnumerable<Teacher> Find(Expression<Func<Teacher, bool>> @where, params Expression<Func<Teacher, object>>[] includes)
    {
        return  DataAccessFactory.GetTeachersRepository.Find(@where, includes);
    }
		



        		

}

}
