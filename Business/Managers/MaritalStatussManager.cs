//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
// </auto-generated>
//------------------------------------------------------------------------------
using System;
using System.Collections;
using System.Collections.Generic;
using System.Linq;
using System.Linq.Expressions;
using System.Data.SqlClient;


using DataAccess;
using DataAccess.Base;
using Business.Base;
using Business.Interfaces;
using Objects;


 
namespace Business.Managers
{
public class MaritalStatussManager : BusinessComponentBase, IMaritalStatussManager
{


    public MaritalStatussManager(IDataAccessFactory dataAccessFactory)
        : base(dataAccessFactory)
    {

    }

public void Add(MaritalStatus MaritalStatus)
    {

DataAccessFactory.GetMaritalStatussRepository.Add(MaritalStatus);
            DataAccessFactory.Commit();

}

public void Update(MaritalStatus MaritalStatus)
    {

DataAccessFactory.GetMaritalStatussRepository.Update(MaritalStatus);
        DataAccessFactory.Commit();

}

public void Delete(MaritalStatus MaritalStatus)
    {

DataAccessFactory.GetMaritalStatussRepository.Delete(MaritalStatus);
            DataAccessFactory.Commit();

}

public MaritalStatus GetById(short id)
    {
        MaritalStatus MaritalStatus = null;

        //  MaritalStatus =  DataAccessFactory.GetMaritalStatussRepository.First(_MaritalStatus => _MaritalStatus.MaritalStatusID == id);

        return MaritalStatus;
    }

    public IList<MaritalStatus> GetAll()
    {
        IEnumerable<MaritalStatus> MaritalStatuss = null;

        MaritalStatuss = DataAccessFactory.GetMaritalStatussRepository.GetAll();

        IList<MaritalStatus> result = MaritalStatuss.ToList<MaritalStatus>();

        return result;
    }
		
    public IEnumerable<MaritalStatus> Find(Expression<Func<MaritalStatus, bool>> @where, params Expression<Func<MaritalStatus, object>>[] includes)
    {
        return  DataAccessFactory.GetMaritalStatussRepository.Find(@where, includes);
    }
		



        		

}

}
