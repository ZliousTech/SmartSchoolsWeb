//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
// </auto-generated>
//------------------------------------------------------------------------------
using System;
using System.Collections;
using System.Collections.Generic;
using System.Linq;
using System.Linq.Expressions;
using System.Data.SqlClient;


using DataAccess;
using DataAccess.Base;
using Business.Base;
using Business.Interfaces;
using Objects;


 
namespace Business.Managers
{
public class SessionsManager : BusinessComponentBase, ISessionsManager
{


    public SessionsManager(IDataAccessFactory dataAccessFactory)
        : base(dataAccessFactory)
    {

    }

public void Add(Session Session)
    {

DataAccessFactory.GetSessionsRepository.Add(Session);
            DataAccessFactory.Commit();

}

public void Update(Session Session)
    {

DataAccessFactory.GetSessionsRepository.Update(Session);
        DataAccessFactory.Commit();

}

public void Delete(Session Session)
    {

DataAccessFactory.GetSessionsRepository.Delete(Session);
            DataAccessFactory.Commit();

}

public Session GetById(short id)
    {
        Session Session = null;

        //  Session =  DataAccessFactory.GetSessionsRepository.First(_Session => _Session.SessionID == id);

        return Session;
    }

    public IList<Session> GetAll()
    {
        IEnumerable<Session> Sessions = null;

        Sessions = DataAccessFactory.GetSessionsRepository.GetAll();

        IList<Session> result = Sessions.ToList<Session>();

        return result;
    }
		
    public IEnumerable<Session> Find(Expression<Func<Session, bool>> @where, params Expression<Func<Session, object>>[] includes)
    {
        return  DataAccessFactory.GetSessionsRepository.Find(@where, includes);
    }
		



        		

}

}
