//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
// </auto-generated>
//------------------------------------------------------------------------------
using System;
using System.Collections;
using System.Collections.Generic;
using System.Linq;
using System.Linq.Expressions;
using System.Data.SqlClient;


using DataAccess;
using DataAccess.Base;
using Business.Base;
using Business.Interfaces;
using Objects;


 
namespace Business.Managers
{
public class StudentGuardDetailsManager : BusinessComponentBase, IStudentGuardDetailsManager
{


    public StudentGuardDetailsManager(IDataAccessFactory dataAccessFactory)
        : base(dataAccessFactory)
    {

    }

public void Add(StudentGuardDetail StudentGuardDetail)
    {

DataAccessFactory.GetStudentGuardDetailsRepository.Add(StudentGuardDetail);
            DataAccessFactory.Commit();

}

public void Update(StudentGuardDetail StudentGuardDetail)
    {

DataAccessFactory.GetStudentGuardDetailsRepository.Update(StudentGuardDetail);
        DataAccessFactory.Commit();

}

public void Delete(StudentGuardDetail StudentGuardDetail)
    {

DataAccessFactory.GetStudentGuardDetailsRepository.Delete(StudentGuardDetail);
            DataAccessFactory.Commit();

}

public StudentGuardDetail GetById(short id)
    {
        StudentGuardDetail StudentGuardDetail = null;

        //  StudentGuardDetail =  DataAccessFactory.GetStudentGuardDetailsRepository.First(_StudentGuardDetail => _StudentGuardDetail.StudentGuardDetailID == id);

        return StudentGuardDetail;
    }

    public IList<StudentGuardDetail> GetAll()
    {
        IEnumerable<StudentGuardDetail> StudentGuardDetails = null;

        StudentGuardDetails = DataAccessFactory.GetStudentGuardDetailsRepository.GetAll();

        IList<StudentGuardDetail> result = StudentGuardDetails.ToList<StudentGuardDetail>();

        return result;
    }
		
    public IEnumerable<StudentGuardDetail> Find(Expression<Func<StudentGuardDetail, bool>> @where, params Expression<Func<StudentGuardDetail, object>>[] includes)
    {
        return  DataAccessFactory.GetStudentGuardDetailsRepository.Find(@where, includes);
    }
		



        		

}

}

