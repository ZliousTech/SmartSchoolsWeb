//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
// </auto-generated>
//------------------------------------------------------------------------------
using System;
using System.Collections;
using System.Collections.Generic;
using System.Linq;
using System.Linq.Expressions;
using System.Data.SqlClient;


using DataAccess;
using DataAccess.Base;
using Business.Base;
using Business.Interfaces;
using Objects;


 
namespace Business.Managers
{
public class SectionsManager : BusinessComponentBase, ISectionsManager
{


    public SectionsManager(IDataAccessFactory dataAccessFactory)
        : base(dataAccessFactory)
    {

    }

public void Add(Section Section)
    {

DataAccessFactory.GetSectionsRepository.Add(Section);
            DataAccessFactory.Commit();

}

public void Update(Section Section)
    {

DataAccessFactory.GetSectionsRepository.Update(Section);
        DataAccessFactory.Commit();

}

public void Delete(Section Section)
    {

DataAccessFactory.GetSectionsRepository.Delete(Section);
            DataAccessFactory.Commit();

}

public Section GetById(short id)
    {
        Section Section = null;

        //  Section =  DataAccessFactory.GetSectionsRepository.First(_Section => _Section.SectionID == id);

        return Section;
    }

    public IList<Section> GetAll()
    {
        IEnumerable<Section> Sections = null;

        Sections = DataAccessFactory.GetSectionsRepository.GetAll();

        IList<Section> result = Sections.ToList<Section>();

        return result;
    }
		
    public IEnumerable<Section> Find(Expression<Func<Section, bool>> @where, params Expression<Func<Section, object>>[] includes)
    {
        return  DataAccessFactory.GetSectionsRepository.Find(@where, includes);
    }
		



        		

}

}
