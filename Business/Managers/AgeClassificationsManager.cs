//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
// </auto-generated>
//------------------------------------------------------------------------------
using System;
using System.Collections;
using System.Collections.Generic;
using System.Linq;
using System.Linq.Expressions;
using System.Data.SqlClient;


using DataAccess;
using DataAccess.Base;
using Business.Base;
using Business.Interfaces;
using Objects;


 
namespace Business.Managers
{
public class AgeClassificationsManager : BusinessComponentBase, IAgeClassificationsManager
{


    public AgeClassificationsManager(IDataAccessFactory dataAccessFactory)
        : base(dataAccessFactory)
    {

    }

public void Add(AgeClassification AgeClassification)
    {

DataAccessFactory.GetAgeClassificationsRepository.Add(AgeClassification);
            DataAccessFactory.Commit();

}

public void Update(AgeClassification AgeClassification)
    {

DataAccessFactory.GetAgeClassificationsRepository.Update(AgeClassification);
        DataAccessFactory.Commit();

}

public void Delete(AgeClassification AgeClassification)
    {

DataAccessFactory.GetAgeClassificationsRepository.Delete(AgeClassification);
            DataAccessFactory.Commit();

}

public AgeClassification GetById(short id)
    {
        AgeClassification AgeClassification = null;

        //  AgeClassification =  DataAccessFactory.GetAgeClassificationsRepository.First(_AgeClassification => _AgeClassification.AgeClassificationID == id);

        return AgeClassification;
    }

    public IList<AgeClassification> GetAll()
    {
        IEnumerable<AgeClassification> AgeClassifications = null;

        AgeClassifications = DataAccessFactory.GetAgeClassificationsRepository.GetAll();

        IList<AgeClassification> result = AgeClassifications.ToList<AgeClassification>();

        return result;
    }
		
    public IEnumerable<AgeClassification> Find(Expression<Func<AgeClassification, bool>> @where, params Expression<Func<AgeClassification, object>>[] includes)
    {
        return  DataAccessFactory.GetAgeClassificationsRepository.Find(@where, includes);
    }
		



        		

}

}
