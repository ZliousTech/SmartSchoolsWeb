//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
// </auto-generated>
//------------------------------------------------------------------------------
using System;
using System.Collections;
using System.Collections.Generic;
using System.Linq;
using System.Linq.Expressions;
using System.Data.SqlClient;


using DataAccess;
using DataAccess.Base;
using Business.Base;
using Business.Interfaces;
using Objects;


 
namespace Business.Managers
{
public class StaffLeafsManager : BusinessComponentBase, IStaffLeafsManager
{


    public StaffLeafsManager(IDataAccessFactory dataAccessFactory)
        : base(dataAccessFactory)
    {

    }

public void Add(StaffLeaf StaffLeaf)
    {

DataAccessFactory.GetStaffLeafsRepository.Add(StaffLeaf);
            DataAccessFactory.Commit();

}

public void Update(StaffLeaf StaffLeaf)
    {

DataAccessFactory.GetStaffLeafsRepository.Update(StaffLeaf);
        DataAccessFactory.Commit();

}

public void Delete(StaffLeaf StaffLeaf)
    {

DataAccessFactory.GetStaffLeafsRepository.Delete(StaffLeaf);
            DataAccessFactory.Commit();

}

public StaffLeaf GetById(short id)
    {
        StaffLeaf StaffLeaf = null;

        //  StaffLeaf =  DataAccessFactory.GetStaffLeafsRepository.First(_StaffLeaf => _StaffLeaf.StaffLeafID == id);

        return StaffLeaf;
    }

    public IList<StaffLeaf> GetAll()
    {
        IEnumerable<StaffLeaf> StaffLeafs = null;

        StaffLeafs = DataAccessFactory.GetStaffLeafsRepository.GetAll();

        IList<StaffLeaf> result = StaffLeafs.ToList<StaffLeaf>();

        return result;
    }
		
    public IEnumerable<StaffLeaf> Find(Expression<Func<StaffLeaf, bool>> @where, params Expression<Func<StaffLeaf, object>>[] includes)
    {
        return  DataAccessFactory.GetStaffLeafsRepository.Find(@where, includes);
    }
		



        		

}

}
