//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
// </auto-generated>
//------------------------------------------------------------------------------
using System;
using System.Collections;
using System.Collections.Generic;
using System.Linq;
using System.Linq.Expressions;
using System.Data.SqlClient;


using DataAccess;
using DataAccess.Base;
using Business.Base;
using Business.Interfaces;
using Objects;


 
namespace Business.Managers
{
public class BusInfosManager : BusinessComponentBase, IBusInfosManager
{


    public BusInfosManager(IDataAccessFactory dataAccessFactory)
        : base(dataAccessFactory)
    {

    }

public void Add(BusInfo BusInfo)
    {

DataAccessFactory.GetBusInfosRepository.Add(BusInfo);
            DataAccessFactory.Commit();

}

public void Update(BusInfo BusInfo)
    {

DataAccessFactory.GetBusInfosRepository.Update(BusInfo);
        DataAccessFactory.Commit();

}

public void Delete(BusInfo BusInfo)
    {

DataAccessFactory.GetBusInfosRepository.Delete(BusInfo);
            DataAccessFactory.Commit();

}

public BusInfo GetById(short id)
    {
        BusInfo BusInfo = null;

        //  BusInfo =  DataAccessFactory.GetBusInfosRepository.First(_BusInfo => _BusInfo.BusInfoID == id);

        return BusInfo;
    }

    public IList<BusInfo> GetAll()
    {
        IEnumerable<BusInfo> BusInfos = null;

        BusInfos = DataAccessFactory.GetBusInfosRepository.GetAll();

        IList<BusInfo> result = BusInfos.ToList<BusInfo>();

        return result;
    }
		
    public IEnumerable<BusInfo> Find(Expression<Func<BusInfo, bool>> @where, params Expression<Func<BusInfo, object>>[] includes)
    {
        return  DataAccessFactory.GetBusInfosRepository.Find(@where, includes);
    }
		



        		

}

}
