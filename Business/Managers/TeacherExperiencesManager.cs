//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
// </auto-generated>
//------------------------------------------------------------------------------
using System;
using System.Collections;
using System.Collections.Generic;
using System.Linq;
using System.Linq.Expressions;
using System.Data.SqlClient;


using DataAccess;
using DataAccess.Base;
using Business.Base;
using Business.Interfaces;
using Objects;


 
namespace Business.Managers
{
public class TeacherExperiencesManager : BusinessComponentBase, ITeacherExperiencesManager
{


    public TeacherExperiencesManager(IDataAccessFactory dataAccessFactory)
        : base(dataAccessFactory)
    {

    }

public void Add(TeacherExperience TeacherExperience)
    {

DataAccessFactory.GetTeacherExperiencesRepository.Add(TeacherExperience);
            DataAccessFactory.Commit();

}

public void Update(TeacherExperience TeacherExperience)
    {

DataAccessFactory.GetTeacherExperiencesRepository.Update(TeacherExperience);
        DataAccessFactory.Commit();

}

public void Delete(TeacherExperience TeacherExperience)
    {

DataAccessFactory.GetTeacherExperiencesRepository.Delete(TeacherExperience);
            DataAccessFactory.Commit();

}

public TeacherExperience GetById(short id)
    {
        TeacherExperience TeacherExperience = null;

        //  TeacherExperience =  DataAccessFactory.GetTeacherExperiencesRepository.First(_TeacherExperience => _TeacherExperience.TeacherExperienceID == id);

        return TeacherExperience;
    }

    public IList<TeacherExperience> GetAll()
    {
        IEnumerable<TeacherExperience> TeacherExperiences = null;

        TeacherExperiences = DataAccessFactory.GetTeacherExperiencesRepository.GetAll();

        IList<TeacherExperience> result = TeacherExperiences.ToList<TeacherExperience>();

        return result;
    }
		
    public IEnumerable<TeacherExperience> Find(Expression<Func<TeacherExperience, bool>> @where, params Expression<Func<TeacherExperience, object>>[] includes)
    {
        return  DataAccessFactory.GetTeacherExperiencesRepository.Find(@where, includes);
    }
		



        		

}

}
