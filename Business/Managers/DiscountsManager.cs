//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
// </auto-generated>
//------------------------------------------------------------------------------
using System;
using System.Collections;
using System.Collections.Generic;
using System.Linq;
using System.Linq.Expressions;
using System.Data.SqlClient;


using DataAccess;
using DataAccess.Base;
using Business.Base;
using Business.Interfaces;
using Objects;


 
namespace Business.Managers
{
public class DiscountsManager : BusinessComponentBase, IDiscountsManager
{


    public DiscountsManager(IDataAccessFactory dataAccessFactory)
        : base(dataAccessFactory)
    {

    }

public void Add(Discount Discount)
    {

DataAccessFactory.GetDiscountsRepository.Add(Discount);
            DataAccessFactory.Commit();

}

public void Update(Discount Discount)
    {

DataAccessFactory.GetDiscountsRepository.Update(Discount);
        DataAccessFactory.Commit();

}

public void Delete(Discount Discount)
    {

DataAccessFactory.GetDiscountsRepository.Delete(Discount);
            DataAccessFactory.Commit();

}

public Discount GetById(short id)
    {
        Discount Discount = null;

        //  Discount =  DataAccessFactory.GetDiscountsRepository.First(_Discount => _Discount.DiscountID == id);

        return Discount;
    }

    public IList<Discount> GetAll()
    {
        IEnumerable<Discount> Discounts = null;

        Discounts = DataAccessFactory.GetDiscountsRepository.GetAll();

        IList<Discount> result = Discounts.ToList<Discount>();

        return result;
    }
		
    public IEnumerable<Discount> Find(Expression<Func<Discount, bool>> @where, params Expression<Func<Discount, object>>[] includes)
    {
        return  DataAccessFactory.GetDiscountsRepository.Find(@where, includes);
    }
		



        		

}

}
