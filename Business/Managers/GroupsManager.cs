//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
// </auto-generated>
//------------------------------------------------------------------------------
using System;
using System.Collections;
using System.Collections.Generic;
using System.Linq;
using System.Linq.Expressions;
using System.Data.SqlClient;


using DataAccess;
using DataAccess.Base;
using Business.Base;
using Business.Interfaces;
using Objects;


 
namespace Business.Managers
{
public class GroupsManager : BusinessComponentBase, IGroupsManager
{


    public GroupsManager(IDataAccessFactory dataAccessFactory)
        : base(dataAccessFactory)
    {

    }

public void Add(Group Group)
    {

DataAccessFactory.GetGroupsRepository.Add(Group);
            DataAccessFactory.Commit();

}

public void Update(Group Group)
    {

DataAccessFactory.GetGroupsRepository.Update(Group);
        DataAccessFactory.Commit();

}

public void Delete(Group Group)
    {

DataAccessFactory.GetGroupsRepository.Delete(Group);
            DataAccessFactory.Commit();

}

public Group GetById(short id)
    {
        Group Group = null;

        //  Group =  DataAccessFactory.GetGroupsRepository.First(_Group => _Group.GroupID == id);

        return Group;
    }

    public IList<Group> GetAll()
    {
        IEnumerable<Group> Groups = null;

        Groups = DataAccessFactory.GetGroupsRepository.GetAll();

        IList<Group> result = Groups.ToList<Group>();

        return result;
    }
		
    public IEnumerable<Group> Find(Expression<Func<Group, bool>> @where, params Expression<Func<Group, object>>[] includes)
    {
        return  DataAccessFactory.GetGroupsRepository.Find(@where, includes);
    }
		



        		

}

}
