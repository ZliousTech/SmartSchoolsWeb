//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
// </auto-generated>
//------------------------------------------------------------------------------
using System;
using System.Collections;
using System.Collections.Generic;
using System.Linq;
using System.Linq.Expressions;
using System.Data.SqlClient;


using DataAccess;
using DataAccess.Base;
using Business.Base;
using Business.Interfaces;
using Objects;


 
namespace Business.Managers
{
public class ExternalStudentsManager : BusinessComponentBase, IExternalStudentsManager
{


    public ExternalStudentsManager(IDataAccessFactory dataAccessFactory)
        : base(dataAccessFactory)
    {

    }

public void Add(ExternalStudent ExternalStudent)
    {

DataAccessFactory.GetExternalStudentsRepository.Add(ExternalStudent);
            DataAccessFactory.Commit();

}

public void Update(ExternalStudent ExternalStudent)
    {

DataAccessFactory.GetExternalStudentsRepository.Update(ExternalStudent);
        DataAccessFactory.Commit();

}

public void Delete(ExternalStudent ExternalStudent)
    {

DataAccessFactory.GetExternalStudentsRepository.Delete(ExternalStudent);
            DataAccessFactory.Commit();

}

public ExternalStudent GetById(short id)
    {
        ExternalStudent ExternalStudent = null;

        //  ExternalStudent =  DataAccessFactory.GetExternalStudentsRepository.First(_ExternalStudent => _ExternalStudent.ExternalStudentID == id);

        return ExternalStudent;
    }

    public IList<ExternalStudent> GetAll()
    {
        IEnumerable<ExternalStudent> ExternalStudents = null;

        ExternalStudents = DataAccessFactory.GetExternalStudentsRepository.GetAll();

        IList<ExternalStudent> result = ExternalStudents.ToList<ExternalStudent>();

        return result;
    }
		
    public IEnumerable<ExternalStudent> Find(Expression<Func<ExternalStudent, bool>> @where, params Expression<Func<ExternalStudent, object>>[] includes)
    {
        return  DataAccessFactory.GetExternalStudentsRepository.Find(@where, includes);
    }
		



        		

}

}
