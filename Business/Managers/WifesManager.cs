//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
// </auto-generated>
//------------------------------------------------------------------------------
using System;
using System.Collections;
using System.Collections.Generic;
using System.Linq;
using System.Linq.Expressions;
using System.Data.SqlClient;


using DataAccess;
using DataAccess.Base;
using Business.Base;
using Business.Interfaces;
using Objects;


 
namespace Business.Managers
{
public class WifesManager : BusinessComponentBase, IWifesManager
{


    public WifesManager(IDataAccessFactory dataAccessFactory)
        : base(dataAccessFactory)
    {

    }

public void Add(Wife Wife)
    {

DataAccessFactory.GetWifesRepository.Add(Wife);
            DataAccessFactory.Commit();

}

public void Update(Wife Wife)
    {

DataAccessFactory.GetWifesRepository.Update(Wife);
        DataAccessFactory.Commit();

}

public void Delete(Wife Wife)
    {

DataAccessFactory.GetWifesRepository.Delete(Wife);
            DataAccessFactory.Commit();

}

public Wife GetById(short id)
    {
        Wife Wife = null;

        //  Wife =  DataAccessFactory.GetWifesRepository.First(_Wife => _Wife.WifeID == id);

        return Wife;
    }

    public IList<Wife> GetAll()
    {
        IEnumerable<Wife> Wifes = null;

        Wifes = DataAccessFactory.GetWifesRepository.GetAll();

        IList<Wife> result = Wifes.ToList<Wife>();

        return result;
    }
		
    public IEnumerable<Wife> Find(Expression<Func<Wife, bool>> @where, params Expression<Func<Wife, object>>[] includes)
    {
        return  DataAccessFactory.GetWifesRepository.Find(@where, includes);
    }
		



        		

}

}

