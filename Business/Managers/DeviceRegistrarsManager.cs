//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
// </auto-generated>
//------------------------------------------------------------------------------
using System;
using System.Collections;
using System.Collections.Generic;
using System.Linq;
using System.Linq.Expressions;
using System.Data.SqlClient;


using DataAccess;
using DataAccess.Base;
using Business.Base;
using Business.Interfaces;
using Objects;


 
namespace Business.Managers
{
public class DeviceRegistrarsManager : BusinessComponentBase, IDeviceRegistrarsManager
{


    public DeviceRegistrarsManager(IDataAccessFactory dataAccessFactory)
        : base(dataAccessFactory)
    {

    }

public void Add(DeviceRegistrar DeviceRegistrar)
    {

DataAccessFactory.GetDeviceRegistrarsRepository.Add(DeviceRegistrar);
            DataAccessFactory.Commit();

}

public void Update(DeviceRegistrar DeviceRegistrar)
    {

DataAccessFactory.GetDeviceRegistrarsRepository.Update(DeviceRegistrar);
        DataAccessFactory.Commit();

}

public void Delete(DeviceRegistrar DeviceRegistrar)
    {

DataAccessFactory.GetDeviceRegistrarsRepository.Delete(DeviceRegistrar);
            DataAccessFactory.Commit();

}

public DeviceRegistrar GetById(short id)
    {
        DeviceRegistrar DeviceRegistrar = null;

        //  DeviceRegistrar =  DataAccessFactory.GetDeviceRegistrarsRepository.First(_DeviceRegistrar => _DeviceRegistrar.DeviceRegistrarID == id);

        return DeviceRegistrar;
    }

    public IList<DeviceRegistrar> GetAll()
    {
        IEnumerable<DeviceRegistrar> DeviceRegistrars = null;

        DeviceRegistrars = DataAccessFactory.GetDeviceRegistrarsRepository.GetAll();

        IList<DeviceRegistrar> result = DeviceRegistrars.ToList<DeviceRegistrar>();

        return result;
    }
		
    public IEnumerable<DeviceRegistrar> Find(Expression<Func<DeviceRegistrar, bool>> @where, params Expression<Func<DeviceRegistrar, object>>[] includes)
    {
        return  DataAccessFactory.GetDeviceRegistrarsRepository.Find(@where, includes);
    }
		



        		

}

}
