//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
// </auto-generated>
//------------------------------------------------------------------------------
using System;
using System.Collections;
using System.Collections.Generic;
using System.Linq;
using System.Linq.Expressions;
using System.Data.SqlClient;


using DataAccess;
using DataAccess.Base;
using Business.Base;
using Business.Interfaces;
using Objects;


 
namespace Business.Managers
{
public class BusTripsManager : BusinessComponentBase, IBusTripsManager
{


    public BusTripsManager(IDataAccessFactory dataAccessFactory)
        : base(dataAccessFactory)
    {

    }

public void Add(BusTrip BusTrip)
    {

DataAccessFactory.GetBusTripsRepository.Add(BusTrip);
            DataAccessFactory.Commit();

}

public void Update(BusTrip BusTrip)
    {

DataAccessFactory.GetBusTripsRepository.Update(BusTrip);
        DataAccessFactory.Commit();

}

public void Delete(BusTrip BusTrip)
    {

DataAccessFactory.GetBusTripsRepository.Delete(BusTrip);
            DataAccessFactory.Commit();

}

public BusTrip GetById(short id)
    {
        BusTrip BusTrip = null;

        //  BusTrip =  DataAccessFactory.GetBusTripsRepository.First(_BusTrip => _BusTrip.BusTripID == id);

        return BusTrip;
    }

    public IList<BusTrip> GetAll()
    {
        IEnumerable<BusTrip> BusTrips = null;

        BusTrips = DataAccessFactory.GetBusTripsRepository.GetAll();

        IList<BusTrip> result = BusTrips.ToList<BusTrip>();

        return result;
    }
		
    public IEnumerable<BusTrip> Find(Expression<Func<BusTrip, bool>> @where, params Expression<Func<BusTrip, object>>[] includes)
    {
        return  DataAccessFactory.GetBusTripsRepository.Find(@where, includes);
    }
		



        		

}

}
