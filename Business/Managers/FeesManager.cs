//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
// </auto-generated>
//------------------------------------------------------------------------------
using System;
using System.Collections;
using System.Collections.Generic;
using System.Linq;
using System.Linq.Expressions;
using System.Data.SqlClient;


using DataAccess;
using DataAccess.Base;
using Business.Base;
using Business.Interfaces;
using Objects;


 
namespace Business.Managers
{
public class FeesManager : BusinessComponentBase, IFeesManager
{


    public FeesManager(IDataAccessFactory dataAccessFactory)
        : base(dataAccessFactory)
    {

    }

public void Add(Fee Fee)
    {

DataAccessFactory.GetFeesRepository.Add(Fee);
            DataAccessFactory.Commit();

}

public void Update(Fee Fee)
    {

DataAccessFactory.GetFeesRepository.Update(Fee);
        DataAccessFactory.Commit();

}

public void Delete(Fee Fee)
    {

DataAccessFactory.GetFeesRepository.Delete(Fee);
            DataAccessFactory.Commit();

}

public Fee GetById(short id)
    {
        Fee Fee = null;

        //  Fee =  DataAccessFactory.GetFeesRepository.First(_Fee => _Fee.FeeID == id);

        return Fee;
    }

    public IList<Fee> GetAll()
    {
        IEnumerable<Fee> Fees = null;

        Fees = DataAccessFactory.GetFeesRepository.GetAll();

        IList<Fee> result = Fees.ToList<Fee>();

        return result;
    }
		
    public IEnumerable<Fee> Find(Expression<Func<Fee, bool>> @where, params Expression<Func<Fee, object>>[] includes)
    {
        return  DataAccessFactory.GetFeesRepository.Find(@where, includes);
    }
		



        		

}

}
