//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
// </auto-generated>
//------------------------------------------------------------------------------
using System;
using System.Collections;
using System.Collections.Generic;
using System.Linq;
using System.Linq.Expressions;
using System.Data.SqlClient;


using DataAccess;
using DataAccess.Base;
using Business.Base;
using Business.Interfaces;
using Objects;


 
namespace Business.Managers
{
public class DisciplineActionsManager : BusinessComponentBase, IDisciplineActionsManager
{


    public DisciplineActionsManager(IDataAccessFactory dataAccessFactory)
        : base(dataAccessFactory)
    {

    }

public void Add(DisciplineAction DisciplineAction)
    {

DataAccessFactory.GetDisciplineActionsRepository.Add(DisciplineAction);
            DataAccessFactory.Commit();

}

public void Update(DisciplineAction DisciplineAction)
    {

DataAccessFactory.GetDisciplineActionsRepository.Update(DisciplineAction);
        DataAccessFactory.Commit();

}

public void Delete(DisciplineAction DisciplineAction)
    {

DataAccessFactory.GetDisciplineActionsRepository.Delete(DisciplineAction);
            DataAccessFactory.Commit();

}

public DisciplineAction GetById(short id)
    {
        DisciplineAction DisciplineAction = null;

        //  DisciplineAction =  DataAccessFactory.GetDisciplineActionsRepository.First(_DisciplineAction => _DisciplineAction.DisciplineActionID == id);

        return DisciplineAction;
    }

    public IList<DisciplineAction> GetAll()
    {
        IEnumerable<DisciplineAction> DisciplineActions = null;

        DisciplineActions = DataAccessFactory.GetDisciplineActionsRepository.GetAll();

        IList<DisciplineAction> result = DisciplineActions.ToList<DisciplineAction>();

        return result;
    }
		
    public IEnumerable<DisciplineAction> Find(Expression<Func<DisciplineAction, bool>> @where, params Expression<Func<DisciplineAction, object>>[] includes)
    {
        return  DataAccessFactory.GetDisciplineActionsRepository.Find(@where, includes);
    }
		



        		

}

}
