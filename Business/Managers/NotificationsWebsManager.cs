//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
// </auto-generated>
//------------------------------------------------------------------------------
using System;
using System.Collections;
using System.Collections.Generic;
using System.Linq;
using System.Linq.Expressions;
using System.Data.SqlClient;


using DataAccess;
using DataAccess.Base;
using Business.Base;
using Business.Interfaces;
using Objects;


 
namespace Business.Managers
{
public class NotificationsWebsManager : BusinessComponentBase, INotificationsWebsManager
{


    public NotificationsWebsManager(IDataAccessFactory dataAccessFactory)
        : base(dataAccessFactory)
    {

    }

public void Add(NotificationsWeb NotificationsWeb)
    {

DataAccessFactory.GetNotificationsWebsRepository.Add(NotificationsWeb);
            DataAccessFactory.Commit();

}

public void Update(NotificationsWeb NotificationsWeb)
    {

DataAccessFactory.GetNotificationsWebsRepository.Update(NotificationsWeb);
        DataAccessFactory.Commit();

}

public void Delete(NotificationsWeb NotificationsWeb)
    {

DataAccessFactory.GetNotificationsWebsRepository.Delete(NotificationsWeb);
            DataAccessFactory.Commit();

}

public NotificationsWeb GetById(short id)
    {
        NotificationsWeb NotificationsWeb = null;

        //  NotificationsWeb =  DataAccessFactory.GetNotificationsWebsRepository.First(_NotificationsWeb => _NotificationsWeb.NotificationsWebID == id);

        return NotificationsWeb;
    }

    public IList<NotificationsWeb> GetAll()
    {
        IEnumerable<NotificationsWeb> NotificationsWebs = null;

        NotificationsWebs = DataAccessFactory.GetNotificationsWebsRepository.GetAll();

        IList<NotificationsWeb> result = NotificationsWebs.ToList<NotificationsWeb>();

        return result;
    }
		
    public IEnumerable<NotificationsWeb> Find(Expression<Func<NotificationsWeb, bool>> @where, params Expression<Func<NotificationsWeb, object>>[] includes)
    {
        return  DataAccessFactory.GetNotificationsWebsRepository.Find(@where, includes);
    }
		



        		

}

}

