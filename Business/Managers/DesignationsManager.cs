//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
// </auto-generated>
//------------------------------------------------------------------------------
using System;
using System.Collections;
using System.Collections.Generic;
using System.Linq;
using System.Linq.Expressions;
using System.Data.SqlClient;


using DataAccess;
using DataAccess.Base;
using Business.Base;
using Business.Interfaces;
using Objects;


 
namespace Business.Managers
{
public class DesignationsManager : BusinessComponentBase, IDesignationsManager
{


    public DesignationsManager(IDataAccessFactory dataAccessFactory)
        : base(dataAccessFactory)
    {

    }

public void Add(Designation Designation)
    {

DataAccessFactory.GetDesignationsRepository.Add(Designation);
            DataAccessFactory.Commit();

}

public void Update(Designation Designation)
    {

DataAccessFactory.GetDesignationsRepository.Update(Designation);
        DataAccessFactory.Commit();

}

public void Delete(Designation Designation)
    {

DataAccessFactory.GetDesignationsRepository.Delete(Designation);
            DataAccessFactory.Commit();

}

public Designation GetById(short id)
    {
        Designation Designation = null;

        //  Designation =  DataAccessFactory.GetDesignationsRepository.First(_Designation => _Designation.DesignationID == id);

        return Designation;
    }

    public IList<Designation> GetAll()
    {
        IEnumerable<Designation> Designations = null;

        Designations = DataAccessFactory.GetDesignationsRepository.GetAll();

        IList<Designation> result = Designations.ToList<Designation>();

        return result;
    }
		
    public IEnumerable<Designation> Find(Expression<Func<Designation, bool>> @where, params Expression<Func<Designation, object>>[] includes)
    {
        return  DataAccessFactory.GetDesignationsRepository.Find(@where, includes);
    }
		



        		

}

}
