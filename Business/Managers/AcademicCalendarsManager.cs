//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
// </auto-generated>
//------------------------------------------------------------------------------
using System;
using System.Collections;
using System.Collections.Generic;
using System.Linq;
using System.Linq.Expressions;
using System.Data.SqlClient;


using DataAccess;
using DataAccess.Base;
using Business.Base;
using Business.Interfaces;
using Objects;


 
namespace Business.Managers
{
public class AcademicCalendarsManager : BusinessComponentBase, IAcademicCalendarsManager
{


    public AcademicCalendarsManager(IDataAccessFactory dataAccessFactory)
        : base(dataAccessFactory)
    {

    }

public void Add(AcademicCalendar AcademicCalendar)
    {

DataAccessFactory.GetAcademicCalendarsRepository.Add(AcademicCalendar);
            DataAccessFactory.Commit();

}

public void Update(AcademicCalendar AcademicCalendar)
    {

DataAccessFactory.GetAcademicCalendarsRepository.Update(AcademicCalendar);
        DataAccessFactory.Commit();

}

public void Delete(AcademicCalendar AcademicCalendar)
    {

DataAccessFactory.GetAcademicCalendarsRepository.Delete(AcademicCalendar);
            DataAccessFactory.Commit();

}

public AcademicCalendar GetById(short id)
    {
        AcademicCalendar AcademicCalendar = null;

        //  AcademicCalendar =  DataAccessFactory.GetAcademicCalendarsRepository.First(_AcademicCalendar => _AcademicCalendar.AcademicCalendarID == id);

        return AcademicCalendar;
    }

    public IList<AcademicCalendar> GetAll()
    {
        IEnumerable<AcademicCalendar> AcademicCalendars = null;

        AcademicCalendars = DataAccessFactory.GetAcademicCalendarsRepository.GetAll();

        IList<AcademicCalendar> result = AcademicCalendars.ToList<AcademicCalendar>();

        return result;
    }
		
    public IEnumerable<AcademicCalendar> Find(Expression<Func<AcademicCalendar, bool>> @where, params Expression<Func<AcademicCalendar, object>>[] includes)
    {
        return  DataAccessFactory.GetAcademicCalendarsRepository.Find(@where, includes);
    }
		



        		

}

}
