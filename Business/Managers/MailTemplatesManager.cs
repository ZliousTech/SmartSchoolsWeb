//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
// </auto-generated>
//------------------------------------------------------------------------------
using System;
using System.Collections;
using System.Collections.Generic;
using System.Linq;
using System.Linq.Expressions;
using System.Data.SqlClient;


using DataAccess;
using DataAccess.Base;
using Business.Base;
using Business.Interfaces;
using Objects;


 
namespace Business.Managers
{
public class MailTemplatesManager : BusinessComponentBase, IMailTemplatesManager
{


    public MailTemplatesManager(IDataAccessFactory dataAccessFactory)
        : base(dataAccessFactory)
    {

    }

public void Add(MailTemplate MailTemplate)
    {

DataAccessFactory.GetMailTemplatesRepository.Add(MailTemplate);
            DataAccessFactory.Commit();

}

public void Update(MailTemplate MailTemplate)
    {

DataAccessFactory.GetMailTemplatesRepository.Update(MailTemplate);
        DataAccessFactory.Commit();

}

public void Delete(MailTemplate MailTemplate)
    {

DataAccessFactory.GetMailTemplatesRepository.Delete(MailTemplate);
            DataAccessFactory.Commit();

}

public MailTemplate GetById(short id)
    {
        MailTemplate MailTemplate = null;

        //  MailTemplate =  DataAccessFactory.GetMailTemplatesRepository.First(_MailTemplate => _MailTemplate.MailTemplateID == id);

        return MailTemplate;
    }

    public IList<MailTemplate> GetAll()
    {
        IEnumerable<MailTemplate> MailTemplates = null;

        MailTemplates = DataAccessFactory.GetMailTemplatesRepository.GetAll();

        IList<MailTemplate> result = MailTemplates.ToList<MailTemplate>();

        return result;
    }
		
    public IEnumerable<MailTemplate> Find(Expression<Func<MailTemplate, bool>> @where, params Expression<Func<MailTemplate, object>>[] includes)
    {
        return  DataAccessFactory.GetMailTemplatesRepository.Find(@where, includes);
    }
		



        		

}

}

