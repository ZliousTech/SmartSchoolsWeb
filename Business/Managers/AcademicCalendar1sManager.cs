//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
// </auto-generated>
//------------------------------------------------------------------------------
using System;
using System.Collections;
using System.Collections.Generic;
using System.Linq;
using System.Linq.Expressions;
using System.Data.SqlClient;


using DataAccess;
using DataAccess.Base;
using Business.Base;
using Business.Interfaces;
using Objects;


 
namespace Business.Managers
{
public class AcademicCalendar1sManager : BusinessComponentBase, IAcademicCalendar1sManager
{


    public AcademicCalendar1sManager(IDataAccessFactory dataAccessFactory)
        : base(dataAccessFactory)
    {

    }

public void Add(AcademicCalendar1 AcademicCalendar1)
    {

DataAccessFactory.GetAcademicCalendar1sRepository.Add(AcademicCalendar1);
            DataAccessFactory.Commit();

}

public void Update(AcademicCalendar1 AcademicCalendar1)
    {

DataAccessFactory.GetAcademicCalendar1sRepository.Update(AcademicCalendar1);
        DataAccessFactory.Commit();

}

public void Delete(AcademicCalendar1 AcademicCalendar1)
    {

DataAccessFactory.GetAcademicCalendar1sRepository.Delete(AcademicCalendar1);
            DataAccessFactory.Commit();

}

public AcademicCalendar1 GetById(short id)
    {
        AcademicCalendar1 AcademicCalendar1 = null;

        //  AcademicCalendar1 =  DataAccessFactory.GetAcademicCalendar1sRepository.First(_AcademicCalendar1 => _AcademicCalendar1.AcademicCalendar1ID == id);

        return AcademicCalendar1;
    }

    public IList<AcademicCalendar1> GetAll()
    {
        IEnumerable<AcademicCalendar1> AcademicCalendar1s = null;

        AcademicCalendar1s = DataAccessFactory.GetAcademicCalendar1sRepository.GetAll();

        IList<AcademicCalendar1> result = AcademicCalendar1s.ToList<AcademicCalendar1>();

        return result;
    }
		
    public IEnumerable<AcademicCalendar1> Find(Expression<Func<AcademicCalendar1, bool>> @where, params Expression<Func<AcademicCalendar1, object>>[] includes)
    {
        return  DataAccessFactory.GetAcademicCalendar1sRepository.Find(@where, includes);
    }
		



        		

}

}
