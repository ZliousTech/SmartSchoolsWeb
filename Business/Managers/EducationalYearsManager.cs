//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
// </auto-generated>
//------------------------------------------------------------------------------
using System;
using System.Collections;
using System.Collections.Generic;
using System.Linq;
using System.Linq.Expressions;
using System.Data.SqlClient;


using DataAccess;
using DataAccess.Base;
using Business.Base;
using Business.Interfaces;
using Objects;


 
namespace Business.Managers
{
public class EducationalYearsManager : BusinessComponentBase, IEducationalYearsManager
{


    public EducationalYearsManager(IDataAccessFactory dataAccessFactory)
        : base(dataAccessFactory)
    {

    }

public void Add(EducationalYear EducationalYear)
    {

DataAccessFactory.GetEducationalYearsRepository.Add(EducationalYear);
            DataAccessFactory.Commit();

}

public void Update(EducationalYear EducationalYear)
    {

DataAccessFactory.GetEducationalYearsRepository.Update(EducationalYear);
        DataAccessFactory.Commit();

}

public void Delete(EducationalYear EducationalYear)
    {

DataAccessFactory.GetEducationalYearsRepository.Delete(EducationalYear);
            DataAccessFactory.Commit();

}

public EducationalYear GetById(short id)
    {
        EducationalYear EducationalYear = null;

        //  EducationalYear =  DataAccessFactory.GetEducationalYearsRepository.First(_EducationalYear => _EducationalYear.EducationalYearID == id);

        return EducationalYear;
    }

    public IList<EducationalYear> GetAll()
    {
        IEnumerable<EducationalYear> EducationalYears = null;

        EducationalYears = DataAccessFactory.GetEducationalYearsRepository.GetAll();

        IList<EducationalYear> result = EducationalYears.ToList<EducationalYear>();

        return result;
    }
		
    public IEnumerable<EducationalYear> Find(Expression<Func<EducationalYear, bool>> @where, params Expression<Func<EducationalYear, object>>[] includes)
    {
        return  DataAccessFactory.GetEducationalYearsRepository.Find(@where, includes);
    }
		



        		

}

}

