//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
// </auto-generated>
//------------------------------------------------------------------------------
using System;
using System.Collections;
using System.Collections.Generic;
using System.Linq;
using System.Linq.Expressions;
using System.Data.SqlClient;


using DataAccess;
using DataAccess.Base;
using Business.Base;
using Business.Interfaces;
using Objects;


 
namespace Business.Managers
{
public class StaffSalaryDetailsManager : BusinessComponentBase, IStaffSalaryDetailsManager
{


    public StaffSalaryDetailsManager(IDataAccessFactory dataAccessFactory)
        : base(dataAccessFactory)
    {

    }

public void Add(StaffSalaryDetail StaffSalaryDetail)
    {

DataAccessFactory.GetStaffSalaryDetailsRepository.Add(StaffSalaryDetail);
            DataAccessFactory.Commit();

}

public void Update(StaffSalaryDetail StaffSalaryDetail)
    {

DataAccessFactory.GetStaffSalaryDetailsRepository.Update(StaffSalaryDetail);
        DataAccessFactory.Commit();

}

public void Delete(StaffSalaryDetail StaffSalaryDetail)
    {

DataAccessFactory.GetStaffSalaryDetailsRepository.Delete(StaffSalaryDetail);
            DataAccessFactory.Commit();

}

public StaffSalaryDetail GetById(short id)
    {
        StaffSalaryDetail StaffSalaryDetail = null;

        //  StaffSalaryDetail =  DataAccessFactory.GetStaffSalaryDetailsRepository.First(_StaffSalaryDetail => _StaffSalaryDetail.StaffSalaryDetailID == id);

        return StaffSalaryDetail;
    }

    public IList<StaffSalaryDetail> GetAll()
    {
        IEnumerable<StaffSalaryDetail> StaffSalaryDetails = null;

        StaffSalaryDetails = DataAccessFactory.GetStaffSalaryDetailsRepository.GetAll();

        IList<StaffSalaryDetail> result = StaffSalaryDetails.ToList<StaffSalaryDetail>();

        return result;
    }
		
    public IEnumerable<StaffSalaryDetail> Find(Expression<Func<StaffSalaryDetail, bool>> @where, params Expression<Func<StaffSalaryDetail, object>>[] includes)
    {
        return  DataAccessFactory.GetStaffSalaryDetailsRepository.Find(@where, includes);
    }
		



        		

}

}
