//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
// </auto-generated>
//------------------------------------------------------------------------------
using System;
using System.Collections;
using System.Collections.Generic;
using System.Linq;
using System.Linq.Expressions;
using System.Data.SqlClient;


using DataAccess;
using DataAccess.Base;
using Business.Base;
using Business.Interfaces;
using Objects;


 
namespace Business.Managers
{
public class ExternalStudentGuardDetailsManager : BusinessComponentBase, IExternalStudentGuardDetailsManager
{


    public ExternalStudentGuardDetailsManager(IDataAccessFactory dataAccessFactory)
        : base(dataAccessFactory)
    {

    }

public void Add(ExternalStudentGuardDetail ExternalStudentGuardDetail)
    {

DataAccessFactory.GetExternalStudentGuardDetailsRepository.Add(ExternalStudentGuardDetail);
            DataAccessFactory.Commit();

}

public void Update(ExternalStudentGuardDetail ExternalStudentGuardDetail)
    {

DataAccessFactory.GetExternalStudentGuardDetailsRepository.Update(ExternalStudentGuardDetail);
        DataAccessFactory.Commit();

}

public void Delete(ExternalStudentGuardDetail ExternalStudentGuardDetail)
    {

DataAccessFactory.GetExternalStudentGuardDetailsRepository.Delete(ExternalStudentGuardDetail);
            DataAccessFactory.Commit();

}

public ExternalStudentGuardDetail GetById(short id)
    {
        ExternalStudentGuardDetail ExternalStudentGuardDetail = null;

        //  ExternalStudentGuardDetail =  DataAccessFactory.GetExternalStudentGuardDetailsRepository.First(_ExternalStudentGuardDetail => _ExternalStudentGuardDetail.ExternalStudentGuardDetailID == id);

        return ExternalStudentGuardDetail;
    }

    public IList<ExternalStudentGuardDetail> GetAll()
    {
        IEnumerable<ExternalStudentGuardDetail> ExternalStudentGuardDetails = null;

        ExternalStudentGuardDetails = DataAccessFactory.GetExternalStudentGuardDetailsRepository.GetAll();

        IList<ExternalStudentGuardDetail> result = ExternalStudentGuardDetails.ToList<ExternalStudentGuardDetail>();

        return result;
    }
		
    public IEnumerable<ExternalStudentGuardDetail> Find(Expression<Func<ExternalStudentGuardDetail, bool>> @where, params Expression<Func<ExternalStudentGuardDetail, object>>[] includes)
    {
        return  DataAccessFactory.GetExternalStudentGuardDetailsRepository.Find(@where, includes);
    }
		



        		

}

}
