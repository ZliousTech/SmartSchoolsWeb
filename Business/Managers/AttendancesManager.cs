//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
// </auto-generated>
//------------------------------------------------------------------------------
using System;
using System.Collections;
using System.Collections.Generic;
using System.Linq;
using System.Linq.Expressions;
using System.Data.SqlClient;


using DataAccess;
using DataAccess.Base;
using Business.Base;
using Business.Interfaces;
using Objects;


 
namespace Business.Managers
{
public class AttendancesManager : BusinessComponentBase, IAttendancesManager
{


    public AttendancesManager(IDataAccessFactory dataAccessFactory)
        : base(dataAccessFactory)
    {

    }

public void Add(Attendance Attendance)
    {

DataAccessFactory.GetAttendancesRepository.Add(Attendance);
            DataAccessFactory.Commit();

}

public void Update(Attendance Attendance)
    {

DataAccessFactory.GetAttendancesRepository.Update(Attendance);
        DataAccessFactory.Commit();

}

public void Delete(Attendance Attendance)
    {

DataAccessFactory.GetAttendancesRepository.Delete(Attendance);
            DataAccessFactory.Commit();

}

public Attendance GetById(short id)
    {
        Attendance Attendance = null;

        //  Attendance =  DataAccessFactory.GetAttendancesRepository.First(_Attendance => _Attendance.AttendanceID == id);

        return Attendance;
    }

    public IList<Attendance> GetAll()
    {
        IEnumerable<Attendance> Attendances = null;

        Attendances = DataAccessFactory.GetAttendancesRepository.GetAll();

        IList<Attendance> result = Attendances.ToList<Attendance>();

        return result;
    }
		
    public IEnumerable<Attendance> Find(Expression<Func<Attendance, bool>> @where, params Expression<Func<Attendance, object>>[] includes)
    {
        return  DataAccessFactory.GetAttendancesRepository.Find(@where, includes);
    }
		



        		

}

}
