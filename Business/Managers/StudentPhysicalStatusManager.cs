//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
// </auto-generated>
//------------------------------------------------------------------------------
using System;
using System.Collections;
using System.Collections.Generic;
using System.Linq;
using System.Linq.Expressions;
using System.Data.SqlClient;


using DataAccess;
using DataAccess.Base;
using Business.Base;
using Business.Interfaces;
using Objects;


 
namespace Business.Managers
{
public class StudentPhysicalStatusManager : BusinessComponentBase, IStudentPhysicalStatusManager
{


    public StudentPhysicalStatusManager(IDataAccessFactory dataAccessFactory)
        : base(dataAccessFactory)
    {

    }

public void Add(StudentPhysicalStatu StudentPhysicalStatu)
    {

DataAccessFactory.GetStudentPhysicalStatusRepository.Add(StudentPhysicalStatu);
            DataAccessFactory.Commit();

}

public void Update(StudentPhysicalStatu StudentPhysicalStatu)
    {

DataAccessFactory.GetStudentPhysicalStatusRepository.Update(StudentPhysicalStatu);
        DataAccessFactory.Commit();

}

public void Delete(StudentPhysicalStatu StudentPhysicalStatu)
    {

DataAccessFactory.GetStudentPhysicalStatusRepository.Delete(StudentPhysicalStatu);
            DataAccessFactory.Commit();

}

public StudentPhysicalStatu GetById(short id)
    {
        StudentPhysicalStatu StudentPhysicalStatu = null;

        //  StudentPhysicalStatu =  DataAccessFactory.GetStudentPhysicalStatusRepository.First(_StudentPhysicalStatu => _StudentPhysicalStatu.StudentPhysicalStatuID == id);

        return StudentPhysicalStatu;
    }

    public IList<StudentPhysicalStatu> GetAll()
    {
        IEnumerable<StudentPhysicalStatu> StudentPhysicalStatus = null;

        StudentPhysicalStatus = DataAccessFactory.GetStudentPhysicalStatusRepository.GetAll();

        IList<StudentPhysicalStatu> result = StudentPhysicalStatus.ToList<StudentPhysicalStatu>();

        return result;
    }
		
    public IEnumerable<StudentPhysicalStatu> Find(Expression<Func<StudentPhysicalStatu, bool>> @where, params Expression<Func<StudentPhysicalStatu, object>>[] includes)
    {
        return  DataAccessFactory.GetStudentPhysicalStatusRepository.Find(@where, includes);
    }
		



        		

}

}
