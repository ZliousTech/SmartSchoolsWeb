//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
// </auto-generated>
//------------------------------------------------------------------------------
using System;
using System.Collections;
using System.Collections.Generic;
using System.Linq;
using System.Linq.Expressions;
using System.Data.SqlClient;


using DataAccess;
using DataAccess.Base;
using Business.Base;
using Business.Interfaces;
using Objects;


 
namespace Business.Managers
{
public class MSTeams_SessionssManager : BusinessComponentBase, IMSTeams_SessionssManager
{


    public MSTeams_SessionssManager(IDataAccessFactory dataAccessFactory)
        : base(dataAccessFactory)
    {

    }

public void Add(MSTeams_Sessions MSTeams_Sessions)
    {

DataAccessFactory.GetMSTeams_SessionssRepository.Add(MSTeams_Sessions);
            DataAccessFactory.Commit();

}

public void Update(MSTeams_Sessions MSTeams_Sessions)
    {

DataAccessFactory.GetMSTeams_SessionssRepository.Update(MSTeams_Sessions);
        DataAccessFactory.Commit();

}

public void Delete(MSTeams_Sessions MSTeams_Sessions)
    {

DataAccessFactory.GetMSTeams_SessionssRepository.Delete(MSTeams_Sessions);
            DataAccessFactory.Commit();

}

public MSTeams_Sessions GetById(short id)
    {
        MSTeams_Sessions MSTeams_Sessions = null;

        //  MSTeams_Sessions =  DataAccessFactory.GetMSTeams_SessionssRepository.First(_MSTeams_Sessions => _MSTeams_Sessions.MSTeams_SessionsID == id);

        return MSTeams_Sessions;
    }

    public IList<MSTeams_Sessions> GetAll()
    {
        IEnumerable<MSTeams_Sessions> MSTeams_Sessionss = null;

        MSTeams_Sessionss = DataAccessFactory.GetMSTeams_SessionssRepository.GetAll();

        IList<MSTeams_Sessions> result = MSTeams_Sessionss.ToList<MSTeams_Sessions>();

        return result;
    }
		
    public IEnumerable<MSTeams_Sessions> Find(Expression<Func<MSTeams_Sessions, bool>> @where, params Expression<Func<MSTeams_Sessions, object>>[] includes)
    {
        return  DataAccessFactory.GetMSTeams_SessionssRepository.Find(@where, includes);
    }
		



        		

}

}
