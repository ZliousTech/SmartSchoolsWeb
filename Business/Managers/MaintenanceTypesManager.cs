//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
// </auto-generated>
//------------------------------------------------------------------------------
using System;
using System.Collections;
using System.Collections.Generic;
using System.Linq;
using System.Linq.Expressions;
using System.Data.SqlClient;


using DataAccess;
using DataAccess.Base;
using Business.Base;
using Business.Interfaces;
using Objects;


 
namespace Business.Managers
{
public class MaintenanceTypesManager : BusinessComponentBase, IMaintenanceTypesManager
{


    public MaintenanceTypesManager(IDataAccessFactory dataAccessFactory)
        : base(dataAccessFactory)
    {

    }

public void Add(MaintenanceType MaintenanceType)
    {

DataAccessFactory.GetMaintenanceTypesRepository.Add(MaintenanceType);
            DataAccessFactory.Commit();

}

public void Update(MaintenanceType MaintenanceType)
    {

DataAccessFactory.GetMaintenanceTypesRepository.Update(MaintenanceType);
        DataAccessFactory.Commit();

}

public void Delete(MaintenanceType MaintenanceType)
    {

DataAccessFactory.GetMaintenanceTypesRepository.Delete(MaintenanceType);
            DataAccessFactory.Commit();

}

public MaintenanceType GetById(short id)
    {
        MaintenanceType MaintenanceType = null;

        //  MaintenanceType =  DataAccessFactory.GetMaintenanceTypesRepository.First(_MaintenanceType => _MaintenanceType.MaintenanceTypeID == id);

        return MaintenanceType;
    }

    public IList<MaintenanceType> GetAll()
    {
        IEnumerable<MaintenanceType> MaintenanceTypes = null;

        MaintenanceTypes = DataAccessFactory.GetMaintenanceTypesRepository.GetAll();

        IList<MaintenanceType> result = MaintenanceTypes.ToList<MaintenanceType>();

        return result;
    }
		
    public IEnumerable<MaintenanceType> Find(Expression<Func<MaintenanceType, bool>> @where, params Expression<Func<MaintenanceType, object>>[] includes)
    {
        return  DataAccessFactory.GetMaintenanceTypesRepository.Find(@where, includes);
    }
		



        		

}

}
