//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
// </auto-generated>
//------------------------------------------------------------------------------
using System;
using System.Collections;
using System.Collections.Generic;
using System.Linq;
using System.Linq.Expressions;
using System.Data.SqlClient;


using DataAccess;
using DataAccess.Base;
using Business.Base;
using Business.Interfaces;
using Objects;


 
namespace Business.Managers
{
public class ClassroomsManager : BusinessComponentBase, IClassroomsManager
{


    public ClassroomsManager(IDataAccessFactory dataAccessFactory)
        : base(dataAccessFactory)
    {

    }

public void Add(Classroom Classroom)
    {

DataAccessFactory.GetClassroomsRepository.Add(Classroom);
            DataAccessFactory.Commit();

}

public void Update(Classroom Classroom)
    {

DataAccessFactory.GetClassroomsRepository.Update(Classroom);
        DataAccessFactory.Commit();

}

public void Delete(Classroom Classroom)
    {

DataAccessFactory.GetClassroomsRepository.Delete(Classroom);
            DataAccessFactory.Commit();

}

public Classroom GetById(short id)
    {
        Classroom Classroom = null;

        //  Classroom =  DataAccessFactory.GetClassroomsRepository.First(_Classroom => _Classroom.ClassroomID == id);

        return Classroom;
    }

    public IList<Classroom> GetAll()
    {
        IEnumerable<Classroom> Classrooms = null;

        Classrooms = DataAccessFactory.GetClassroomsRepository.GetAll();

        IList<Classroom> result = Classrooms.ToList<Classroom>();

        return result;
    }
		
    public IEnumerable<Classroom> Find(Expression<Func<Classroom, bool>> @where, params Expression<Func<Classroom, object>>[] includes)
    {
        return  DataAccessFactory.GetClassroomsRepository.Find(@where, includes);
    }
		



        		

}

}
