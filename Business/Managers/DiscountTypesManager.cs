//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
// </auto-generated>
//------------------------------------------------------------------------------
using System;
using System.Collections;
using System.Collections.Generic;
using System.Linq;
using System.Linq.Expressions;
using System.Data.SqlClient;


using DataAccess;
using DataAccess.Base;
using Business.Base;
using Business.Interfaces;
using Objects;


 
namespace Business.Managers
{
public class DiscountTypesManager : BusinessComponentBase, IDiscountTypesManager
{


    public DiscountTypesManager(IDataAccessFactory dataAccessFactory)
        : base(dataAccessFactory)
    {

    }

public void Add(DiscountType DiscountType)
    {

DataAccessFactory.GetDiscountTypesRepository.Add(DiscountType);
            DataAccessFactory.Commit();

}

public void Update(DiscountType DiscountType)
    {

DataAccessFactory.GetDiscountTypesRepository.Update(DiscountType);
        DataAccessFactory.Commit();

}

public void Delete(DiscountType DiscountType)
    {

DataAccessFactory.GetDiscountTypesRepository.Delete(DiscountType);
            DataAccessFactory.Commit();

}

public DiscountType GetById(short id)
    {
        DiscountType DiscountType = null;

        //  DiscountType =  DataAccessFactory.GetDiscountTypesRepository.First(_DiscountType => _DiscountType.DiscountTypeID == id);

        return DiscountType;
    }

    public IList<DiscountType> GetAll()
    {
        IEnumerable<DiscountType> DiscountTypes = null;

        DiscountTypes = DataAccessFactory.GetDiscountTypesRepository.GetAll();

        IList<DiscountType> result = DiscountTypes.ToList<DiscountType>();

        return result;
    }
		
    public IEnumerable<DiscountType> Find(Expression<Func<DiscountType, bool>> @where, params Expression<Func<DiscountType, object>>[] includes)
    {
        return  DataAccessFactory.GetDiscountTypesRepository.Find(@where, includes);
    }
		



        		

}

}

