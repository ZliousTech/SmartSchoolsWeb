//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
// </auto-generated>
//------------------------------------------------------------------------------
using System;
using System.Collections;
using System.Collections.Generic;
using System.Linq;
using System.Linq.Expressions;
using System.Data.SqlClient;


using DataAccess;
using DataAccess.Base;
using Business.Base;
using Business.Interfaces;
using Objects;


 
namespace Business.Managers
{
public class ReligionsManager : BusinessComponentBase, IReligionsManager
{


    public ReligionsManager(IDataAccessFactory dataAccessFactory)
        : base(dataAccessFactory)
    {

    }

public void Add(Religion Religion)
    {

DataAccessFactory.GetReligionsRepository.Add(Religion);
            DataAccessFactory.Commit();

}

public void Update(Religion Religion)
    {

DataAccessFactory.GetReligionsRepository.Update(Religion);
        DataAccessFactory.Commit();

}

public void Delete(Religion Religion)
    {

DataAccessFactory.GetReligionsRepository.Delete(Religion);
            DataAccessFactory.Commit();

}

public Religion GetById(short id)
    {
        Religion Religion = null;

        //  Religion =  DataAccessFactory.GetReligionsRepository.First(_Religion => _Religion.ReligionID == id);

        return Religion;
    }

    public IList<Religion> GetAll()
    {
        IEnumerable<Religion> Religions = null;

        Religions = DataAccessFactory.GetReligionsRepository.GetAll();

        IList<Religion> result = Religions.ToList<Religion>();

        return result;
    }
		
    public IEnumerable<Religion> Find(Expression<Func<Religion, bool>> @where, params Expression<Func<Religion, object>>[] includes)
    {
        return  DataAccessFactory.GetReligionsRepository.Find(@where, includes);
    }
		



        		

}

}
