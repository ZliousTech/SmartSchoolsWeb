//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
// </auto-generated>
//------------------------------------------------------------------------------
using System;
using System.Collections;
using System.Collections.Generic;
using System.Linq;
using System.Linq.Expressions;
using System.Data.SqlClient;


using DataAccess;
using DataAccess.Base;
using Business.Base;
using Business.Interfaces;
using Objects;
using Objects.DTO;

namespace Business.Managers
{
public class UsersManager : BusinessComponentBase, IUsersManager
{


    public UsersManager(IDataAccessFactory dataAccessFactory)
        : base(dataAccessFactory)
    {

    }

public void Add(User User)
    {

DataAccessFactory.GetUsersRepository.Add(User);
            DataAccessFactory.Commit();

}

public void Update(User User)
    {

DataAccessFactory.GetUsersRepository.Update(User);
        DataAccessFactory.Commit();

}

public void Delete(User User)
    {

DataAccessFactory.GetUsersRepository.Delete(User);
            DataAccessFactory.Commit();

}

public User GetById(short id)
    {
        User User = null;

        //  User =  DataAccessFactory.GetUsersRepository.First(_User => _User.UserID == id);

        return User;
    }

    public IList<User> GetAll()
    {
        IEnumerable<User> Users = null;

        Users = DataAccessFactory.GetUsersRepository.GetAll();

        IList<User> result = Users.ToList<User>();

        return result;
    }
		
    public IEnumerable<User> Find(Expression<Func<User, bool>> @where, params Expression<Func<User, object>>[] includes)
    {
        return  DataAccessFactory.GetUsersRepository.Find(@where, includes);
    }

        public UserDTO GetUserLogin(string username, string password,bool asparent, bool asStudent , string lang)

        {
            return DataAccessFactory.GetUsersRepository.GetUserLogin(username,password,asparent, asStudent ,lang);

        }





    }

}
