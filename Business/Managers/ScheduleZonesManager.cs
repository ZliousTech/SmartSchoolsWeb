//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
// </auto-generated>
//------------------------------------------------------------------------------
using System;
using System.Collections;
using System.Collections.Generic;
using System.Linq;
using System.Linq.Expressions;
using System.Data.SqlClient;


using DataAccess;
using DataAccess.Base;
using Business.Base;
using Business.Interfaces;
using Objects;


 
namespace Business.Managers
{
public class ScheduleZonesManager : BusinessComponentBase, IScheduleZonesManager
{


    public ScheduleZonesManager(IDataAccessFactory dataAccessFactory)
        : base(dataAccessFactory)
    {

    }

public void Add(ScheduleZone ScheduleZone)
    {

DataAccessFactory.GetScheduleZonesRepository.Add(ScheduleZone);
            DataAccessFactory.Commit();

}

public void Update(ScheduleZone ScheduleZone)
    {

DataAccessFactory.GetScheduleZonesRepository.Update(ScheduleZone);
        DataAccessFactory.Commit();

}

public void Delete(ScheduleZone ScheduleZone)
    {

DataAccessFactory.GetScheduleZonesRepository.Delete(ScheduleZone);
            DataAccessFactory.Commit();

}

public ScheduleZone GetById(short id)
    {
        ScheduleZone ScheduleZone = null;

        //  ScheduleZone =  DataAccessFactory.GetScheduleZonesRepository.First(_ScheduleZone => _ScheduleZone.ScheduleZoneID == id);

        return ScheduleZone;
    }

    public IList<ScheduleZone> GetAll()
    {
        IEnumerable<ScheduleZone> ScheduleZones = null;

        ScheduleZones = DataAccessFactory.GetScheduleZonesRepository.GetAll();

        IList<ScheduleZone> result = ScheduleZones.ToList<ScheduleZone>();

        return result;
    }
		
    public IEnumerable<ScheduleZone> Find(Expression<Func<ScheduleZone, bool>> @where, params Expression<Func<ScheduleZone, object>>[] includes)
    {
        return  DataAccessFactory.GetScheduleZonesRepository.Find(@where, includes);
    }
		



        		

}

}
