//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
// </auto-generated>
//------------------------------------------------------------------------------
using System;
using System.Collections;
using System.Collections.Generic;
using System.Linq;
using System.Linq.Expressions;
using System.Data.SqlClient;


using DataAccess;
using DataAccess.Base;
using Business.Base;
using Business.Interfaces;
using Objects;


 
namespace Business.Managers
{
public class PaymentMethodsManager : BusinessComponentBase, IPaymentMethodsManager
{


    public PaymentMethodsManager(IDataAccessFactory dataAccessFactory)
        : base(dataAccessFactory)
    {

    }

public void Add(PaymentMethod PaymentMethod)
    {

DataAccessFactory.GetPaymentMethodsRepository.Add(PaymentMethod);
            DataAccessFactory.Commit();

}

public void Update(PaymentMethod PaymentMethod)
    {

DataAccessFactory.GetPaymentMethodsRepository.Update(PaymentMethod);
        DataAccessFactory.Commit();

}

public void Delete(PaymentMethod PaymentMethod)
    {

DataAccessFactory.GetPaymentMethodsRepository.Delete(PaymentMethod);
            DataAccessFactory.Commit();

}

public PaymentMethod GetById(short id)
    {
        PaymentMethod PaymentMethod = null;

        //  PaymentMethod =  DataAccessFactory.GetPaymentMethodsRepository.First(_PaymentMethod => _PaymentMethod.PaymentMethodID == id);

        return PaymentMethod;
    }

    public IList<PaymentMethod> GetAll()
    {
        IEnumerable<PaymentMethod> PaymentMethods = null;

        PaymentMethods = DataAccessFactory.GetPaymentMethodsRepository.GetAll();

        IList<PaymentMethod> result = PaymentMethods.ToList<PaymentMethod>();

        return result;
    }
		
    public IEnumerable<PaymentMethod> Find(Expression<Func<PaymentMethod, bool>> @where, params Expression<Func<PaymentMethod, object>>[] includes)
    {
        return  DataAccessFactory.GetPaymentMethodsRepository.Find(@where, includes);
    }
		



        		

}

}
