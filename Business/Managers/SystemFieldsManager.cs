//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
// </auto-generated>
//------------------------------------------------------------------------------
using System;
using System.Collections;
using System.Collections.Generic;
using System.Linq;
using System.Linq.Expressions;
using System.Data.SqlClient;


using DataAccess;
using DataAccess.Base;
using Business.Base;
using Business.Interfaces;
using Objects;


 
namespace Business.Managers
{
public class SystemFieldsManager : BusinessComponentBase, ISystemFieldsManager
{


    public SystemFieldsManager(IDataAccessFactory dataAccessFactory)
        : base(dataAccessFactory)
    {

    }

public void Add(SystemField SystemField)
    {

DataAccessFactory.GetSystemFieldsRepository.Add(SystemField);
            DataAccessFactory.Commit();

}

public void Update(SystemField SystemField)
    {

DataAccessFactory.GetSystemFieldsRepository.Update(SystemField);
        DataAccessFactory.Commit();

}

public void Delete(SystemField SystemField)
    {

DataAccessFactory.GetSystemFieldsRepository.Delete(SystemField);
            DataAccessFactory.Commit();

}

public SystemField GetById(short id)
    {
        SystemField SystemField = null;

        //  SystemField =  DataAccessFactory.GetSystemFieldsRepository.First(_SystemField => _SystemField.SystemFieldID == id);

        return SystemField;
    }

    public IList<SystemField> GetAll()
    {
        IEnumerable<SystemField> SystemFields = null;

        SystemFields = DataAccessFactory.GetSystemFieldsRepository.GetAll();

        IList<SystemField> result = SystemFields.ToList<SystemField>();

        return result;
    }
		
    public IEnumerable<SystemField> Find(Expression<Func<SystemField, bool>> @where, params Expression<Func<SystemField, object>>[] includes)
    {
        return  DataAccessFactory.GetSystemFieldsRepository.Find(@where, includes);
    }
		



        		

}

}
