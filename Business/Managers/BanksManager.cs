//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
// </auto-generated>
//------------------------------------------------------------------------------
using System;
using System.Collections;
using System.Collections.Generic;
using System.Linq;
using System.Linq.Expressions;
using System.Data.SqlClient;


using DataAccess;
using DataAccess.Base;
using Business.Base;
using Business.Interfaces;
using Objects;



namespace Business.Managers
{
    public class BanksManager : BusinessComponentBase, IBanksManager
    {


        public BanksManager(IDataAccessFactory dataAccessFactory)
            : base(dataAccessFactory)
        {

        }

        public void Add(Bank Bank)
        {

            DataAccessFactory.GetBanksRepository.Add(Bank);
            DataAccessFactory.Commit();

        }

        public void Update(Bank Bank)
        {

            DataAccessFactory.GetBanksRepository.Update(Bank);
            DataAccessFactory.Commit();

        }

        public void Delete(Bank Bank)
        {

            DataAccessFactory.GetBanksRepository.Delete(Bank);
            DataAccessFactory.Commit();

        }

        public Bank GetById(short id)
        {
            Bank Bank = null;

            //  Bank =  DataAccessFactory.GetBanksRepository.First(_Bank => _Bank.BankID == id);

            return Bank;
        }

        public IList<Bank> GetAll()
        {
            IEnumerable<Bank> Banks = null;

            Banks = DataAccessFactory.GetBanksRepository.GetAll();

            IList<Bank> result = Banks.ToList<Bank>();

            return result;
        }

        public IEnumerable<Bank> Find(Expression<Func<Bank, bool>> @where, params Expression<Func<Bank, object>>[] includes)
        {
            return DataAccessFactory.GetBanksRepository.Find(@where, includes);
        }







    }

}
