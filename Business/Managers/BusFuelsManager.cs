//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
// </auto-generated>
//------------------------------------------------------------------------------
using System;
using System.Collections;
using System.Collections.Generic;
using System.Linq;
using System.Linq.Expressions;
using System.Data.SqlClient;


using DataAccess;
using DataAccess.Base;
using Business.Base;
using Business.Interfaces;
using Objects;


 
namespace Business.Managers
{
public class BusFuelsManager : BusinessComponentBase, IBusFuelsManager
{


    public BusFuelsManager(IDataAccessFactory dataAccessFactory)
        : base(dataAccessFactory)
    {

    }

public void Add(BusFuel BusFuel)
    {

DataAccessFactory.GetBusFuelsRepository.Add(BusFuel);
            DataAccessFactory.Commit();

}

public void Update(BusFuel BusFuel)
    {

DataAccessFactory.GetBusFuelsRepository.Update(BusFuel);
        DataAccessFactory.Commit();

}

public void Delete(BusFuel BusFuel)
    {

DataAccessFactory.GetBusFuelsRepository.Delete(BusFuel);
            DataAccessFactory.Commit();

}

public BusFuel GetById(short id)
    {
        BusFuel BusFuel = null;

        //  BusFuel =  DataAccessFactory.GetBusFuelsRepository.First(_BusFuel => _BusFuel.BusFuelID == id);

        return BusFuel;
    }

    public IList<BusFuel> GetAll()
    {
        IEnumerable<BusFuel> BusFuels = null;

        BusFuels = DataAccessFactory.GetBusFuelsRepository.GetAll();

        IList<BusFuel> result = BusFuels.ToList<BusFuel>();

        return result;
    }
		
    public IEnumerable<BusFuel> Find(Expression<Func<BusFuel, bool>> @where, params Expression<Func<BusFuel, object>>[] includes)
    {
        return  DataAccessFactory.GetBusFuelsRepository.Find(@where, includes);
    }
		



        		

}

}
